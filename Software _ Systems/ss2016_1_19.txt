Логический анализ корректирующих операций для построения качественного алгоритма распознавания



На первом этапе развития теории и практики распознавания образов для решения практических задач возникло большое число методов и алгоритмов, применявшихся без какого-либо теоретического обоснования, а только на основе экспериментальной проверки. Решение задач медицинской и технической диагностики, компьютерного прогноза месторождений, построение экспертных систем ввели в обиход большое число некорректных (эвристических) алгоритмов. В результате возникла необходимость в развитии теории корректирующих операций , синтеза корректных алгоритмов минимальной сложности, в решении вопросов об их устойчивости с помощью математических методов.

Логический подход может представлять собой технологию построения теории синтеза корректных алгоритмов распознавания на базе существующих семейств алгоритмов, так как эти методы, несмотря на отсутствие адекватных математических моделей исследуемых зависимостей между образом и его свойствами, неполноту и противоречивость данных, позволяют создавать алгоритмы, реализующие определенные суждения эксперта.

В данной работе рассматривается логический подход к теоретическому обоснованию построения корректных алгоритмов, расширяющих область получаемых решений на базе существующих алгоритмов.

Постановка задачи

В описании объекта допустимо отсутствие информации о значении того или иного признака. Совокупность некоторого числа объектов и их признаков представляет собой выборку, на которой проработали n алгоритмов. Качество работы алгоритма оценивается булевой функцией. Ни один из рассматриваемых алгоритмов не распознает все множество заданных объектов. Предлагается логический метод построения нового алгоритма, являющийся корректным на всем множестве распознаваемых объектов, на основе существующих алгоритмов и решающих правил, составленных для исследуемой области.

Формальная постановка задачи

На предметной области, состоящей из объектов и их признаков, рассматривается ряд алгоритмов дающих некоторые решения задачи распознавания. Совокупность входных данных и значений оценочных функций алгоритмов можно представить в виде таблицы 1.

Операции переменнозначной логики

Заданная таким образом инверсия обеспечивает включение всех возможных интерпретаций отрицания в различных многозначных логических системах.

Решающие правила и функции качества ответов В данном случае решающие правило – это правило продукции, логическая интерпретация которого говорит, что из совокупности определенных признаков (этот и этот и т.д. признак) следует определенный объект.

Полученный столбец можно рассматривать как частично заданную булеву функцию на множестве переменных.

Логический подход к построению корректного алгоритма на заданной предметной области 

Учитывая требования корректности к алгоритму, составим таблицу 2.

В результате для каждого дизъюнкта получим минимизированную базу знаний, соответствующую набору правил, описанных этим дизъюнктом. Такие дизъюнкты обладают рядом свойств [2] и разбивают область решения на все возможные для данной области классы. Объединение этих областей строит минимизированную базу знаний для всей заданной области.

Алгоритм А5 выделяет индивидуальные признаки объекта d.

Программный аспект разработанной системы на примере медицинской диагностики

При составлении программы были использованы данные, предоставленные Республиканской ЦКБ. У 65 больных проводилась диагностика гастритов по данным гастрологических обследований.

Карта постановки диагноза.

Всего 28 вопросов, на каждый из которых возможно от 2 до 4 ответов.

Количество возможных диагнозов – 17.

Программа, иллюстрирующая работу приведенного выше алгоритма, состоит из двух частей исполняемых модулей.

Модуль 1. Программа поиска по базе. Производит декодирование БД с использованием словаря, загрузки симптомов и диагнозов в форме вопросответ и анализ результатов.

Модуль 2. Программа генерации базы знаний. Создает на основе исходного файла с данными информационную систему знаний. Уменьшает объем базы в соответствии с прилагаемым алгоритмом и добавляет информацию для проверки корректности хранимых данных.

Полная система знаний для программы имеет вид:

File.DBE (Data Base Engine info file) – файл, являющийся результатом работы алгоритма;

File.simp – файл списка симптомов, который необходим для работы пользователя с программой;

он выводит наглядные названия симптомов на основе индексов базы;

File.diag – файл списка диагнозов, необходимый для работы пользователя с программой; выводит наглядные названия диагнозов на основе индексов базы.

Размер сгенерированной базы знаний зависит от количества хранимой информации. Чем больше объем данных, тем больше степень «сжатия базы» (в соответствии с алгоритмом «удаление избыточной информации», «объединение в классы», «объединение классов в домены»), и, чем меньше размер получаемой системы знаний, тем быстрее процесс обработки.

Скорость обработки по сравнению с исходной ~2,4 раза выше.

Окно модуля диагностики (обработки базы знаний) состоит из трех частей: меню окна и кнопки управления, окна списка вопросов, окна выбора варианта ответа.

Для проведения диагностики необходимо открыть базу знаний при помощи команды главного меню База знаний -> Открыть.

В появившемся диалоговом окне выбрать DBEфайл базы знаний и нажать кнопку «Открыть». При корректности структуры базы она загрузится в программу. Для тестирования необходимо ответить на вопросы из поля «вопросы», поочередно выбирая вопрос мышью и отмечая в правой части окна нужный вариант ответа (или при отсутствии или затруднении ответа пропускать вопрос, оставляя поле «ответ» невыбранным).

После ответа на вопросы для получения диагноза нужно выбрать из списка процент точности совпадения ответов с диагнозом и нажать на кнопку «Поиск диагноза». На экране появится окно с результатами поиска по базе.

Для генерации системы знаний для данного программного пакета нужно в главном окне программы выбрать пункт «Конвертировать БЗ», после чего будет запущен модуль «Генерация БЗ», в котором нужно указать имя и путь к файлу исходных данных и к файлу генерируемой базы. Для поиска файлов в компьютере можно воспользоваться кнопками справа от полей ввода.

После задания исходного и конечного имен файлов для генерации нужно нажать кнопку «Создать базу». В указанной папке будет создан файл базы с расширением DBE.

В результате проведенного логического анализа данной предметной области и решающих правил, описывающих объекты, становится понятно, что сложность полученного алгоритма зависит от качества уже заданных алгоритмов и скрытых закономерностей самой предметной области. Предложенный логический метод синтеза позволяет построить корректный алгоритм на всей области данных, моделирует базу знаний, минимизирует ее и фиксирует уникальные для каждого объекта наборы признаков.

