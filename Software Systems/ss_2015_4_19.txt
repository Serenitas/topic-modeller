
Первая эффективная методика построения асинхронных конвейерных схем была предложена А.
Сазерлендом в 1989 году [1].
Он представил конструкцию асинхронного микроконвейера, с помощью которого можно строить асинхронные схемы достаточно высокой сложности.
Особенность его разработки в разделении схемы на управляющую и операционную части.
При этом направления переключений в схеме управления и движения данных в операционной части были противоположно направленными .
При желании конвейер можно замкнуть в этом случае волновое движение данных происходит циклически, без остановки.
На основе микроконвейеров Сазерленда было сделано несколько разработок микропроцессоров, некоторые из которых выпускались серийно.
Методика построения микроконвейеров состояла в переделке синхронной схемы с помощью так называемой операции десинхронизации, когда дерево тактового сигнала в микросхеме заменялось локальными взаимодействиями типа запрос-ответ .
Если рассмотреть одну стадию конвейера, состоящую из элементов логики и элементов памяти на ее выходах, то взаимодействие запрос-ответ строилось следующим образом: запрос формировался одновременно с подачей новых данных на вход логики, а ответ возвращался по защелкивании этих данных в элементах памяти после прохождения через логику.
Чтобы избежать явления гонок, запрос необходимо было задержать на время, не меньшее, чем затрачиваемое на прохождение сигнала через логику.
Таким образом, основная сложность проектирования заключалась в расчете линии задержки для каждой из стадий микроконвейера, на базе которых проектировалось устройство.
Следствием такого подхода был весьма ограниченный диапазон температур и напряжений, поскольку при выходе из диапазона значение задержки распространения сигнала в логике могло превысить моделирующую задержку и схема сбивалась.
Вследствие этого схемы на базе микроконвейеров Сазерленда зависят от разброса задержек в элементах и проводах в той же степени, что и синхронные прототипы, из которых они переделывались.
В НИИСИ РАН в основном исследуются самосинхронные схемы, которые выгодно отличаются от асинхронной архитектуры микроконвейеров Сазерленда своей способностью работать в расширенных диапазонах температур и питающих напряжений, поскольку следствием самосинхронности является независимость от задержек в элементах, а при соблюдении правила эквихронной зоны еще и независимость от задержек в проводах.
Идея разделения асинхронной схемы на подсхему управления и операционную часть получила развитие в работе [2].
Был предложен новый подход к построению систем с глобальной асинхронной синхронизацией.
Система рассматривается как совокупность взаимодействующих блоков, для которых организовано локальное управление синхронизация, основанная на взаимодействии запрос-ответ.
Подсистема управления  получила название синхростратум и по своим свойствам является самосинхронной схемой.
Операционная часть, состоящая из управляемых взаимодействующих блоков, названа процессорным стратумом.
Единственное условие, предъявляемое к управляемым блокам, формирование сигнала ответа по завершении всех переходных процессов в блоке.
GALA-системы наиболее универсальны, поскольку осуществляют взаимодействие блоков с различной архитектурой.
Существует и другая системная архитектура, когда в синхронное окружение вставляется, к примеру, самосинхронный операционных блок.
Примером таких систем служит совместная разработка НИИСИ РАН и ИПИ РАН, где в синхронный микропроцессор КОМДИВ-64 встроен квазисамосинхронный блок деления и извлечения корня двойной точности [3].
Синхростратум строится по модульному принципу, где один модуль осуществляет синхронизацию одного блока и связан с соседними модулями согласно графу соединений по линиям данных между управляемыми блоками.
При этом в качестве управляемого блока может выступать не только большой операционный блок со сложной внутренней структурой, но и всего лишь одна стадия конвейера, состоящая из логики и элементов памяти на выходе.
В общем случае в качестве управляемого блока может выступать автомат Мура.
Таким образом, синхростратум может делиться на верхний уровень взаимодействий на уровне системы и управляемых блоков и более низкие по иерархии уровни, осуществляющие взаимодействие внутри блоков, подблоков и т.д.
Особенностью маршрута проектирования больших самосинхронных операционных блоков является введение парафазного кодирования сигналов и двухфазной дисциплины передачи данных.
Парафазное кодирование требуется для придания свойства монотонности логической функции операционного блока, а двухфазная дисциплина передачи позволяет это свойство монотонности использовать.
При парафазном кодировании значения сигнала 10 и 01 являются информационными и относятся к фазе данных, а значения 00 и 11 относятся к фазе спейсера и являются служебными .
Синхростратумы делятся по способу синхронизации на два типа: синхростратумы с волновой синхронизацией и с параллельной синхронизацией.
Для конвейерных схем целесообразно использовать волновую синхронизацию, поскольку информация в конвейере распространяется однонаправленно от входа к выходу по принципу волны.
Особенность асинхронных конвейерных схем с волновой синхронизацией состоит в том, что конвейер может иметь различную степень наполненности от пустого конвейера до плотно наполненного.
При пустом конвейере первые загруженные данные имеют самую высокую скорость прохождения через конвейер.
При частично наполненном конвейере наибольшая скорость достигается при работе соседних стадий конвейера в противофазе.
Максимальное наполнение конвейера может быть достигнуто остановкой выгрузки данных с его выходов.
Как показала работа коллег из ИПИ РАН, наилучшие результаты получаются при проектировании вручную.
Недостатком такого подхода являются сроки на разработку одного конвейерного блока уходит около года.
В этой связи необходимо было разработать автоматизированный маршрут проектирования, использующий уже существующие синхронные наработки и существенно сокращающий время проектирования.
Для физического проектирования цифровых устройств в НИИСИ используются такие популярные САПР комплекса, как Design Compiler  и Encounter .
Фактически в процессе проектирования осуществляется преобразование логического описания RTL в топологию для производства .
Существующие в САПР программы ориентированы на проектирование синхронных устройств.
Для физической реализации самосинхронных схем непосредственное их применение невозможно.
Однако выборочное использование их функционала дает возможность построить маршрут физического автоматизированного проектирования самосинхронных схем.
Этапы такого маршрута показаны на рисунке.
Целесообразно использовать существующие синхронные наработки, поскольку экономится время на разработку логической модели, а также существенно сокращаются сроки тестирования и исправления ошибок.
Идея о возможности переделки любой синхронной схемы в самосинхронную впервые изложена в [2].
Синтезированную схему синхронного прототипа можно переделать в самосинхронную схему, используя шаблоны.
Для переделки блоков логики удобно использовать перекрестное преобразование [5], которое в процессе парафазного представления сигналов и логики строит прямой и инверсный каналы передачи данных.
Также в процессе перекрестного преобразования становятся монотонными функции всех содержащихся в прямом и инверсном каналах пар логических элементов, что достигается коррекцией входных наборов на входах логических элементов с помощью дополнительных инверторов и перекрестных связей между каналами.
А поскольку результирующая функция блока логики является суперпозицией функций составляющих ее элементов, результирующая функция также становится монотонной.
В процессе преобразования синхронной схемы D-триггеры заменяются самосинхронными защелками, а дерево тактового сигнала синхростратумом, осуществляющим волновую синхронизацию, и схемой индикации окончания переходных процессов в схеме.
Все операции по преобразованию синхронного прототипа в самосинхронную схему осуществляются в автоматическом режиме с помощью скрипта.
В самосинхронной схеме используются асинхронные элементы, такие как С-элемент Миллера, которых нет в используемых библиотеках стандартных элементов.
Эти элементы были созданы в САПР Virtuoso и характеризованы в САПР SiliconSmart.
Таким образом, полученная в результате работы скрипта схема представляет собой нетлист в базисе как стандартных, так и асинхронных элементов и может использоваться при проектировании топологии.
Учитывая вышесказанное, отметим, что первым шагом маршрута является схемотехнический синтез RTL-описания с целью получения исходной синхронной схемы.
Для этого используются Design Compiler и стандартные шаги, характерные для проектирования синхронных схем.
Контроль временных параметров задается файлом с описанными на языке tcl временными ограничениями констрейнтами.
Полученная схема с помощью программы, написанной на языке Perl, преобразуется в парафазную синхронную схему.
Для нее создаются новые констрейнты, отражающие внесенные изменения.
После модификации схемы требуется ее оптимизация с учетом влияния параметров межсоединений.
Учитывая, что парафазный вариант, как уже говорилось, лишь подготовка к конвертации в самосинхронный вариант, решено произвести физическое размещение данной схемы с последующей оптимизацией.
В связи с тем, что для программы конвертации важно сохранение элементной структуры парафазной схемы при оптимизациях, было внесено ограничение на изменения схемы запретить пересинтезирование участков цепи.
Результатом этого этапа стали оптимизированная с учетом параметров межсоединений парафазная схема и файл с информацией о размещении ее элементов .
Следующие шаги маршрута конвертация программой, написанной на языке Perl, парафазной схемы в самосинхронную и последующая ее физическая реализация с использованием информации о размещении элементов парафазной схемы.
Программа конвертации изменяет небольшое количество элементов парафазной схемы и добавляет элементы системы самосинхронизации.
При размещении большая часть информации о размещении элементов парафазной схемы остается актуальной, что ускоряет работу САПР и делает процесс проектирования последовательным.
Для реализации статического временного анализа схемы были предприняты следующие меры: сигнал сброса Reset объявляется синхросигналом, а для элементов, которые являются его потребителями, были сделаны два библиотечных описания: синхронное и асинхронное.
Синхронное описание представляет эти элементы триггерами и позволяет САПР реализовать контроль временных параметров цепей схемы при проектировании.
Асинхронное описание используется лишь при выписке временной модели  устройства.
Таким образом, к оптимизированной парафазной схеме и DEF-файлу добавляются констрейнты для самосинхронной схемы и дополнительный библиотечный файл, отражающие вышесказанное.
Данный набор позволяет осуществить в САПР Encounter три этапа топологического проектирования самосинхронный схемы: размещение; к уже размещенным ячейкам парафазной схемы добавляются элементы самосинхронной версии, и осуществляется оптимизация размещения всех элементов; построение системы синхронизации; строятся цепи распространения сигнала Reset, сама реальная система самосинхронизации при этом уже построена программой конвертации и оптимизирована во время этапа размещения; трассировка межсоединений; реализуется реальное  трассирование межсоединений с учетом конструкторских норм и более точных параметров.
Полученные после физической реализации три файла схема, временная модель и экстракция параметров межсоединений позволяют моделировать устройство с целью проверки работоспособности схемы и получения ее реальных временных параметров.
Данные операции составляют финальный этап маршрута физического автоматизированного проектирования самосинхронных схем.
В качестве синхронного прототипа взят блок FMA, являющийся частью FPU процессора КОМДИВ-64 разработки НИИСИ РАН [6].
Проектирование производилось для техпроцесса фабрики TSMC 65nm.
Финальные параметры разных реализаций показаны в таблице.
Скорость работы самосинхронной конвейерной схемы удобно оценивать по длительности периода смены фаз работающего конвейера.
Период смены фаз можно измерить двумя способами: моделированием и с помощью статического временного анализа; при этом наибольшая пропускная способность самосинхронного конвейера с волновой синхронизацией соответствует наполненности на одну четверть.
В моделировании в установившемся режиме все стадии конвейера работают со скоростью, равной скорости самой медленной из стадий.
Таким образом, период смены фаз всей схемы можно принять равным периоду смены фаз в самой медленной из стадий.
Аналогичный результат получается и при проведении статического временного анализа, поскольку результатом является длительность самого медленного пути распространения сигнала внутри стадии конвейера.
Поскольку распространение информации внутри конвейера происходит волнами, соответствующими отсчетам логического времени [7], можно считать корректным сравнение скоростных показателей работы  самосинхронной схемы и ее синхронного прототипа.
Согласно таблице, скорость самосинхронной схемы получается в 3 раза ниже, чем у синхронного аналога.
Это объясняется двухфазной дисциплиной передачи данных, что автоматически удваивает время распространения сигнала через схему; влияет на скорость и схема сжатия индикации, задержка которой растет вместе с увеличением числа разрядов в стадии конвейера.
Суммарная площадь элементов самосинхронной схемы получилась примерно в 4 раза больше площади синхронного прототипа.
Разница площадей также объясняется схемой сжатия индикации, но наибольшее влияние оказывает парафазное кодирование сигналов, требующее удвоенного числа элементов логики.
Увеличение площади способствует пропорциональному увеличению статической мощности токов утечки в 4 раза.
Рассчитать динамическую мощность потребления не удалось, поскольку стандартный способ, заключающийся в использовании результатов моделирования, не подходит ввиду отсутствия активности на сигнале сброса Reset, который используется в САПР в качестве псевдосинхросигнала.
То же касается и второго способа измерения динамического потребления, заключающегося в измерении переключательной активности элементов во время тестов.
Таким образом, оценка динамического потребления самосинхронных схем в САПР остается предметом дальнейших исследований.
На основании изложенного отметим следующее.
Авторами описана разработка маршрута проектирования самосинхронных конвейерных схем с использованием коммерческих САПР, включающего в себя моделирование, логический синтез и разработку топологии.
Маршрут проектирования рассчитан на использование предварительно разработанных синхронных блоков, поэтому может использовать ранее разработанные блоки, экономя, таким образом, время на разработку, отладку и тестирование.
Полученные самосинхронные блоки представляют собой полные функциональные аналоги своих синхронных прототипов с учетом таких особенностей, как парафазное кодирование проводов и двухфазная дисциплина передачи данных.
На примере блока FMA проведено сравнение результатов преобразования синхронного прототипа в самосинхронный конвейер волновой синхронизацией.
Скорость работы самосинхронного блока оказалась в 3 раза ниже, а площадь в 4 раза больше, чем у синхронного прототипа.
Полученные результаты коррелируют с прогнозами предыдущих исследований [5].
Отдельного рассмотрения требуют и самосинхронные схемы с глобально параллельной синхронизацией, поскольку они лучше подходят для задачи построения автоматов, а не только конвейерных схем.
Одной из наиболее важных проблем в сфере контроля и мониторинга мобильных объектов является их местоопределение.
Погрешность в точность позиционирования транспортного средства вносят такие факторы, как атмосфера, возвышенные объекты, горы и др.
[1].
Для определения точных координат различных объектов, скорости их движения и других факторов служит современная система глобальной спутниковой навигации ГЛОНАСС.
Хотя использование ГЛОНАСС весьма актуально, анализ показывает, что технология позиционирования и идентификации мобильных объектов на пространственных цифровых моделях в транспортной сфере развита недостаточно.
В публикациях, посвященных проблеме местоопределения, как правило, не описываются математические модели и алгоритмы, а приводятся лишь конечные результаты .
При этом практически отсутствуют источники с описанием четкой алгоритмической схемы, пригодной для написания ПО.
Поэтому разработка инструментария для точного местоопределения наземных транспортных средств является актуальной задачей.
Алгоритм работает в два этапа.
На первом этапе фильтр Калмана экстраполирует значения переменных состояния, а также их неопределенности, на втором по данным измерения уточняется результат экстраполяции.
Благодаря пошаговой природе алгоритма он может в реальном времени отслеживать состояние объекта  [6, 7].
Фильтр Калмана основан на квадратичном критерии качества [4, 8, 9], то есть обеспечивает минимум среднеквадратических ошибок оценок.
Оценки определяются на основе условных математических ожиданий вектора состояния объекта наблюдения.
По формуле Байеса можно более точно пересчитать вероятность, учитывая как ранее известную информацию, так и новые данные [7].
Рассмотрим постановку задачи в дискретном случае.
Кроме априорной оценки, выражение для оценки содержит поправочный член, пропорциональный невязке разности между измеренным значением переменной и ее оценкой.
При вычислении оценки каждый шаг нужно начинать с определения априорной дисперсионной матрицы.
Далeе вычислить матрицу коэффициентов усиления, дисперсионную матрицу, затем априорную оценку и в последнюю очередь искомую оценку.
Так как матрицы, , не зависят от измерений, их можно вычислить заранее при всех необходимых значениях [10].
Допустим, что в момент времени получена оценка вектора состояния системы и необходимо получить оценку в момент.
Для этого строим прогноз априорной оценки в момент, опираясь на оценку вектора состояния системы, получаем измерения, далее корректируем оценку в момент, базируясь на прогнозе и измерениях, и получаем окончательную оценку вектора состояния.
 Рассмотрим задачу точного местоопределения координат транспортного средства на основе вторичной обработки информации спутниковой навигационной системы ГЛОНАСС алгоритмами фильтра Калмана и МНК.
Информационную базу составляют данные о местоположении маршрутных автобусов города Оренбурга, полученные с помощью программы АТ Наблюдатель.
На рисунке 3 приведены траектории движения транспортного средства с указанием координат его местоположения.
Проведенная проверка исходных данных на нормальный закон распределения позволяет оценить эффективность методов по различным критериям: средняя ошибка аппроксимации, коэффициент корреляции и критерий Фишера.
Полученные значения используемых статистических критериев, приведенные в таблице, позволяют сделать вывод о том, что для определения координат подвижного транспортного средства можно использовать оба метода.
Тем не менее, результат обработки информации на основе фильтра Калмана является более точным с точки зрения допустимых предельных значений названных критериев.
Проведена проверка эффективности фильтра Калмана и МНК для задачи местоопределения неподвижных объектов, то есть транспортных средств, находящихся на стоянке.
Вычисленные значения критериев в случае корректирования местоположения неподвижного транспортного средства, приведенные в таблице, позволяют сделать вывод о том, что фильтр Калмана является более точным для определения координат.
МНК не удовлетворяет допустимым пределам выбранных критериев, в частности, предельным значениям критерия Фишера.
В заключение отметим, что разработанный алгоритм фильтра Калмана позволит решить проблему позиционирования наземных транспортных средств.
В результате проведенной сравнительной характеристики установлено, что предпочтительным методом для корректирования местоположения подвижных и неподвижных наземных транспортных средств на основе вторичной обработки информации, поступающей со спутниковой навигационной системы ГЛОНАСС, является фильтр Калмана.
