:004.451.2:004.434.
В последние годы для решения множества трудновычислимых задач стали применяться методы и средства параллельного программирования.
Широко известны модели программирования в общей и распределенной памяти [1], позднее к ним добавились гибридные модели [2].
Однако упомянутые средства чаще всего реализуются при достаточно низкоуровневом программировании, что требует значительной переделки исходного последовательного кода.
Производители пакетов тоже задумались о реализации возможностей параллелизма в своих продуктах.
К 2016 году сложилась следующая картина.
Изначально возможности параллельного программирования в пакете Mathematica появились в 2001 г.[7].
Для их обеспечения было выпущено дополнительное средство Parallel Computing Toolkit .
В пакете MATLAB возможности параллельного программирования появились в 2005 г.В 2009 г.о реализации средств параллельного программирования было заявлено в Maple.
В среде Maple13 было реализовано программирование в модели общей памяти.
Пакет MathCad чрезвычайно долгое время никак не развивался в этом направлении.
В данной работе рассмотрены средства параллельного программирования в пакетах MATLAB, Maple и Mathematica.
После обеспечения возможностей параллельного программирования появились два вида параллелизма: distributed computing распределенные вычисления, когда фактически обеспечивается параллелизм по данным [1], и собственно parallel computing, когда взаимодействие между параллельными процессами осуществляется с помощью вызовов специальных команд MATLAB.
Для обеспечения возможностей параллелизма в пакете был разработан тулбокс Parallel Computing Toolbox, лицензируемый отдельно.
Параллельное программирование в MATLAB основано на парадигме модели передачи сообщений.
Кроме того, допускается работа с собственной реализацией MPI, удовлетворяющей определенным условиям [13].
Для конечного пользователя есть два режима работы: интерактивный режим [11] и непосредственно параллельное программирование в модели передачи сообщений .
В таблице 1 приведены основные примитивы параллельного программирования в MATLAB.
Как видим, пакет реализует базовый набор директив для параллельного программирования.
На начальной стадии перед вычислениями в каждой сессии  доступен соответствующий блок матрицы, вектора и вектора.
Вычисления начинаются с того, что каждый рабочий процесс отправляет доступный ему блок вектора соседнему  процессу.
Следующий шаг получение с помощью функции labReceive блока вектора от соседнего рабочего процесса, который к этому моменту уже отправил его.
После получения блока происходит непосредственное вычисление вектора, где номер доступного блока вектора .
Приведем реализацию алгоритма на языке MATLAB: Достаточно часто встречаются типовые ситуации, имеющие понятный способ решения.
Для некоторых таких случаев предусмотрены штатные средства.
Рассмотрим два из них: векторизацию циклов  и частный случай MIMD  типа Single Program Multiple Data .
Цикл параллельная модификация стандартного цикла.
Оператор полезен в случаях, когда нужно провести много однотипных расчетов, например, при моделировании методом Монте-Карло.
Итерации цикла считаются независимо в произвольном порядке рабочими процессами.
Понятно, что оператор нельзя применять тогда, когда имеется зависимость по данным между итерациями.
Также существуют дополнительные ограничения, о которых можно узнать в документации на продукт.
Операторы внутри блока выполняются одновременно во всех рабочих процессах.
Синтаксис команды выглядит следующим образом: где опциональные параметры и минимальное и максимальное число рабочих процессов соответственно.
Система производит автоматическое распределение расчетов на все доступные мощности (например, на все 8 ядер процессора).
Кроме того, MATLAB с выпуска R2010b поддерживает параллельные вычисления на графических процессорах  NVIDIA программирование в модели CUDA.
Соответственно, есть директивы для копирования данных из основной памяти в GPU и, наоборот, директивы для выполнения операций на GPU.
Вычисления на GPU происходят как с одинарной, так и с двойной точностью.
MATLAB также поддерживает выполнение параллельных задач на кластерных системах с использованием функционала MATLAB Distributed Computing Server .
В его рамках возможен запуск параллельных задач в  Microsoft, PBS, Torque, LSF, Condor [14].
В качестве примера можно привести реализацию классической задачи производительпотребитель [15, 16].
В этой задаче один процесс  выдает информацию, а другой  ее получает и обрабатывает.
При решении задачи могут возникать проблемы потери данных и повторного использования данных.
В версии Maple 13 появилось средство Task Programming Model [17], позволяющее работать в модели общей памяти на высоком уровне абстракции.
Разработчик не рекомендует конечным пользователям работать на этом уровне [15].
Каждая подзадача это вызов функции, который выполняется отдельной нитью.
В развитии данного подхода в версии Maple15 появились средства именно параллельного программирования, которые реализованы в дополнительном пакете Grid Package .
Как и в MATLAB, пакет позволяет работать с различными реализациями MPI.
По умолчанию в среде Windows используется реализация Microsoft MPI, включенная в Windows HPC Server, а в среде Linux MPICH2.
В таблице 2 приведены основные примитивы параллельного программирования в Maple.
Более подробно с ними можно ознакомиться в документации на продукт.
Как видно из таблицы, пакет реализует базовый набор директив для параллельного программирования, при этом он отличается по функционалу от MATLAB.
Также отметим, что весь функционал уже лицензирован в рамках пакета и дополнительные лицензии не требуются.
После выхода Maple 2015 расширились функции Maple в тулбоксе grid.
Были добавлены директивы ожидания выполнения  и запуска на выполнение .
Для указания на то, что вычисления необходимо производить параллельно, служит директива Launch.
На всех узлах выполняется одинаковая команда.
Все вычисления прекращаются, как только закончит работу главный процесс .
С целью предотвращения взаимоблокировок вычисления прекращаются автоматически по тайм-ауту, если все узлы ожидают сообщений и нет ни одного узла, который их отправляет.
Пакет Maple позволяет производить ограниченные параллельные вычисления на GPU.
Однако в отличие от MATLAB нет возможности вычислять произвольные функции на GPU.
Доступен только ограниченный набор действий.
Maple поддерживает выполнение параллельных задач на кластерных системах с использованием функционала тулбокса Grid.
В его рамках возможен запуск параллельных задач в СУПЗ Microsoft, PBS, Torque.
В этом случае уже требуется дополнительная лицензия на удаленных клиентах-узлах.
В отличие от остальных математических пакетов в Mathematica нет привязки к какой-либо системной библиотеке передачи сообщений.
Все действия производятся исключительно средствами среды Wolfram Mathematica.
На низком уровне взаимодействие организуется средствами протокола Wolfram Symbolic Transfer Protocol  [18].
Он позволяет работать с гетерогенной средой .
Поскольку все параллельные возможности привязаны к языку, нельзя установить прямые аналогии с функциями MPI, как в случае работы с другими пакетами.
В таблице 3 приведены основные примитивы параллельного программирования в Mathematica.
Для иллюстрации приведем реализацию решения задачи нахождения списка чисел, для которых значение !1 простое [19]: В данном случае организуется бесконечный цикл, прерываемый по внешнему воздействию пользователя.
Начиная с версии 8.0 среда может работать с графическими процессорами NVIDIA и поддерживает технологии CUDA и OpenCL .
Для этого реализованы свободно доступные модули CudaLink [20] и OpenCLLink [21].
Как и все предыдущие пакеты, Mathematica позволяет производить распределенные параллельные вычисления на кластерных системах, для чего используется тулбокс GridMathematica [22].
Тулбокс разработан еще в 2002 г.Он также лицензируется отдельно.
В настоящее время он позволяет запускать задания на СУПЗ Wolfram Lightweight Grid Manager, PBS, Microsoft, Platform LSF и Sun Grid Engine.
В качестве вычислительных мощностей выступают как процессоры, так и графические ускорители.
В заключение отметим, что средства параллельного программирования в пакетах MATLAB и Mathematica достаточно хорошо описаны в литературе .
Для работы со средствами параллельного программирования в пакете Maple нет литературных источников, однако документация на продукт достаточно высокого качества, что позволяет использовать ее для полноценного решения задач.
Отметим, что средства параллельного программирования в математических пакетах регулярно развиваются.
В зависимости от того, в каком пакете происходит работа, доступны несколько отличающиеся возможности, однако любая задача может быть решена в каждом из рассмотренных пакетов, за исключением MathCad.
