
Разработка современных обучающих программно-аппаратных тренажеров и комплексов, предназначенных для подготовки персонала, подразумевает решение ряда технических проблем.
В структуре тренажера конструктивно присутствует множество составных частей, при этом каждая из них решает свои задачи.
Одна из основных технических задач, возникающих в процессе разработки современных тренажеров и программно-аппаратных тренажерных комплексов, это обеспечение взаимодействия программных компонентов составных частей и объединение их в общее математическое информационное пространство [1].
В соответствии с тенденциями создания единой интегрированной учебной и тренажерной баз на основе перспективных технологий, виртуализации, применения концепций центров обработки данных для интеграции единого комплекса ставится актуальная задача создания единого информационного полигона для проведения тренировок и занятий, который должен поддерживаться распределенной сетевой средой моделирования.
Общее информационное пространство аппаратно достигается введением локальной вычислительной сети, объединяющей вычислительные ресурсы учебно-тренировочных средств и представляющей собой универсальную среду передачи информационных сигналов, программно созданием систем распределенного моделирования.
Специально под задачи космического тренажеростроения была разработана программная система распределенного моделирования ТРИО  [2].
Согласно этой системе, тренажер состоит из двух частей: системы моделирования, представляющей собой программную реализацию моделей узлов, и вычислительной системы, на которой осуществляется моделирование.
Система ТРИО разделена на две части: среду разработки и среду исполнения.
Среда разработки предназначена для автоматизированной разработки ПО системы моделирования тренажера.
ТРИО объединяет в одну систему программные объекты, которые делятся на модели и форматы.
Структура ПО нескольких узлов вычислительной системы при использовании технологии ТРИО показана на рисунке 1.
При организации процесса моделирования среда исполнения ТРИО манипулирует всей совокупностью моделей и форматов с учетом их размещения на физически разных узлах вычислительной системы тренажера.
После запуска процесса моделирования на каждом такте происходит обмен переменными между узлами в соответствии с построенными списками.
Анализ существующих внедрений в комплексные тренажеры позволяет сделать вывод о ряде существенных недостатков.
В ТРИО модель данных в общей области резервирует переменные и массивы исходя из максимально возможной потребности.
Таким образом, для проведения тренировки выделяется во много раз больше памяти, чем необходимо.
Такое потребление памяти может негативно повлиять на скорость работы моделей, время выполнения операций записи и воспроизведения контрольных точек, обусловить завышенные требования к характеристикам аппаратных средств тренажера.
Описание одного физического объекта распределено по множеству массивов, а не сосредоточено в полях конкретного класса.
Такое описание делает невозможным накопление отлаженных классов, реализующих моделирование и отображение различных объектов, а также их повторное использование и перенос в следующие проекты.
Одним из принципов построения ПО в настоящее время является инкапсуляция данных и функциональный интерфейс для доступа к ним.
В данном случае все данные видны непосредственно, а изменение типа любой переменной, добавление или удаление переменной из общей области памяти ведут к необходимости изменения модели данных у всех участников проекта.
Создаваемая на каждом узле общая область переменных, содержащая все входные и выходные переменные всех моделей и форматов и являющаяся избыточной по отношению к конкретному узлу и тренажеру в целом, не предусматривает никакого интеллектуального распределения данных между отдельными узлами, поэтому использование системы ТРИО при проектировании современных распределенных информационных пространств тренажеров затруднительно.
Составными частями данной системы являются сервер, существующий в единственном экземпляре в тренажере, и набор клиентов, которые получают сведения о модельном времени, состоянии тренировки и задействованных моделях.
Система моделирования предполагает максимальное отделение моделей от остальных компонентов системы и формализацию способов взаимодействия моделей.
Исполнительная система располагает минимальным объемом информации о моделях, благодаря чему может работать с разнородным составом моделей.
Данный подход позволяет произвольно масштабировать систему [3].
Сервис сетевого взаимодействия моделей, предоставляемый ВМК, также решает вопросы синхронизации данных моделируемых объектов на различных рабочих местах.
Система ВМК, используемая преимущественно в тренажерах для подготовки моряков, учитывает многие специализированные особенности проектирования, внедрения и комплексирования сложных распределенных систем данной тематики.
Использование ее как универсальной распределенной среды моделирования для создания тренажеров других тематик, в том числе тренажеров подготовки специалистов пилотируемой космонавтики, функциональномоделирующих стендов специалистов центра управления полетами  и главной оперативной группы управления  может быть затруднено вследствие ограничений системы и заложенных функциональных возможностей.
Еще одним вариантом решения задачи организации распределенного взаимодействия в сложном тренажерном комплексе является использование распределенной сетевой среды моделирования СОТА.
Это комплекс взаимодействующих программных компонент, основанных на системе с объектно-ориентированной динамической БД с событийно-уведомительным управлением.
Основное назначение среды СОТА использование при разработке обучающих систем и программно-аппаратных моделирующих комплексов в тренажеростроении в качестве базового системообразующего ПО, объединяющего программные компоненты составных частей в единое информационное пространство.
Основные возможности СОТА: хранение моделируемых данных во внутренней динамической распределенной БД, доступ к моделируемым данным, модификация моделируемых данных, автоматическая синхронизация моделируемых данных, функции конфигурирования тренажера, обработка событий и уведомлений об изменении состояний системы и объектов БД, межсетевое программное событийное взаимодействие между узлами распределенной среды моделирования, функции контроля экранов узлов СОТА и удаленного управления компьютерами.
С технической точки зрения среда моделирования СОТА является комплексом взаимодействующих программных компонент, определяющих возможности системы и решающих задачи объединения и взаимодействия составных частей тренажера.
Архитектура среды моделирования СОТА представлена на рисунке 3.
Основными программными компонентами среды СОТА являются программное ядро системы моделирования с внутренней БД типов, клиенты, плагины, форматы, программные модули регистрации узлов СОТА, программные модули конфигурирования, программные модули контроля объектов БД типов, текущего состояния и отладки системы моделирования.
Совокупность этих программных компонентов и определяет среду моделирования СОТА.
Ядро системы моделирования СОТА это программный модуль, содержащий набор функций и классов, реализующих возможности и предоставляющих доступ к управлению и контролю за текущим состоянием системы, к чтению и модификации объектов встроенной динамической БД типов.
Клиентом системы моделирования СОТА является приложение Windows, к которому подключен программный модуль и в исходный код которого встроен программный интерфейс взаимодействия СОТА.
Другое название клиента узел СОТА.
Клиент определяет каркас программного компонента среды моделирования.
Все узлы среды взаимодействуют между собой, используя сетевой протокол TCP-IP.
Несколько клиентов СОТА могут быть запущены на одной рабочей станции  или сервере либо могут быть распределены по сети Ethernet и запускаться на разных рабочих станциях.
В обоих случаях ядро системы моделирования СОТА обеспечит сетевое информационное взаимодействие и автоматически выполнит синхронизацию данных между клиентами.
Плагин системы моделирования СОТА это программный модуль, являющийся динамически подключаемой библиотекой с особым программным интерфейсом СОТА.
Плагины автоматически загружаются узлами СОТА и предназначены для обеспечения решения частных задач, выполняемых системой моделирования тренажера.
Плагины в процессе работы среды моделирования могут быть программно выгружены и при необходимости загружены другим клиентом.
Формат системы моделирования СОТА особый вид плагина, основное и единственное отличие которого в наличии окон отображения информации для взаимодействия с пользователем.
Менеджер плагинов системы моделирования СОТА программный интерфейс, обеспечивающий автоматическую и ручную загрузку и выгрузку плагинов и форматов, программное управление и контроль их текущего состояния.
Для обеспечения целостности среды моделирования в случае возникновения критической ошибки в программном коде плагина  испорченный плагин будет автоматически выгружен из системы, не нарушая работу других загруженных плагинов и узла.
Узел и плагины системы получат уведомление об аварийном завершении плагина и смогут корректно обработать возникшую нештатную ситуацию.
Менеджер процессов системы моделирования СОТА программный интерфейс, обеспечивающий удаленный запуск на рабочих станциях клиентов СОТА и различных приложений Windows и контроль за их состоянием  с возможностью удаленного корректного завершения запущенных процессов.
Основное назначение менеджера процессов использование в качестве центра системы конфигурирования и реконфигурирования состояний сложных тренажеров и программно-аппаратных тренажерных комплексов, состоящих из множества компонентов, объединенных в локальную вычислительную сеть.
Каждый клиент СОТА, присоединенный к среде моделирования, проходит через несколько этапов: регистрацию, подключение, верификацию данных, процесс моделирования, отключение по завершении работы.
Этап регистрации заключается в присоединении к программному модулю регистрации и в получении списка портов и IPадресов зарегистрированных клиентов СОТА.
Система верификации обеспечивает проверку целостности данных при подключении клиентов СОТА к среде моделирования.
Сетевой транспорт среды моделирования СОТА построен на базе протоколов ТСP-IP и реализован на базе сокетов Windows, работающих в асинхронном режиме.
После регистрации и успешной верификации устанавливается постоянное сетевое соединение между узлами для передачи данных.
Каждому сетевому соединению по протоколу TCP-IP соответствует отдельный поток операционной системы Windows.
Данные между узлами передаются посредством сообщений.
Среда моделирования СОТА может создавать между узлами дополнительные каналы сетевого взаимодействия, предназначенные для параллельной передачи больших объемов информации между клиентами СОТА.
БД типов системы моделирования СОТА это совокупность описаний типов данных на языке программирования С++.
За каждым типом данных закреплен свой уникальный идентификатор и привязан определенный GUID [4].
Каждый тип данных привязан к определенному узлу-хозяину или плагину -хозяину, при этом только исходный код программного модуля хозяина имеет право создавать, удалять и модифицировать объекты своего типа данных.
Объекты типов данных создаются, модифицируются и уничтожаются по мере необходимости в процессе работы системы моделирования.
При отсутствии объектов на текущем узле система моделирования СОТА автоматически выполнит проецирование необходимых данных на текущий узел.
Каждый клиент и плагин системы моделирования СОТА имеют в своем составе программный интерфейс, обеспечивающий обработку событий.
Посредством обработчика событий в среде моделирования СОТА реализуется программное взаимодействие между клиентами, плагинами и форматами.
Ответной реакцией среды моделирования СОТА на внешние и внутренние воздействия являются уведомительные события и события-команды.
При компиляции программного ядра среды моделирования СОТА автоматически формируется программный инструментарий разработчика SOTA SDK.
Наличие программного инструментария облегчает автоматизацию процесса проектирования и разработки ПО тренажерных комплексов.
Особенности реализации ПО среды моделирования СОТА: легкость доступа: доступ к объектам БД СОТА, а также к программным интерфейсам СОТА можно получить практически из любого cppили h-файла; автоматическая сборка мусора: при завершении работы среда моделирования корректно автоматически выгружает все объекты БД СОТА и освобождает занимаемую память; корректное закрытие сетевых соединений: при завершении работы клиенты среды моделирования СОТА отрабатывают все необработанные входящие сетевые сообщения и отсылают все накопленные исходящие, после чего корректно закрывают сетевые подключения; независимость расположения: плагины СОТА не привязаны жестко к определенному узлу и могут менять узел по необходимости без потери работоспособности, в то же время клиенты СОТА жестко не привязаны к IP-адресам рабочих станций и при необходимости могут изменить свое местоположение в ЛВС без потери работоспособности системы моделирования.
Актуальной является задача использования распределенной среды моделирования СОТА в процессе модернизации, развития, информационной интеграции и взаимодействия между тренажерами разной архитектуры и комплексирования нескольких ранее созданных тренажеров в единый комплекс.
Поскольку компоненты каждого из тренажеров, созданных в разное время на основе различных средств моделирования и транспортных протоколов, не взаимодействуют между собой по каналам обмена информацией, обладают локальными БД моделирования и исходных данных, должен быть применен принцип интеграции и формирования единого информационного пространства.
Для этого в среде моделирования СОТА предусмотрена система шлюзов, организующих каналы связи с другим тренажером или общей информационной средой, с помощью которой идет взаимодействие, что в совокупности и определит облик единого информационного пространства.
Шлюз также может быть реализован как часть ПО другого тренажера, к примеру, один  из программных компонентов тренажера В может стать полноценным клиентом СОТА, соответственно, при таком варианте взаимодействия в процессе разработки следует учитывать усиленную межтренажную программную и аппаратную зависимость.
Создание тренажерных комплексов с использованием среды моделирования СОТА можно разделить на следующие этапы.
1.
Разбиение решаемой задачи на подзадачи и распределение подзадач по узлам и плагинам  системы моделирования в зависимости от их специфики, определение структур типов данных и динамических массивов, необходимых для решения разработанных подзадач.
2.
3.
Занесение разработанных структур типов данных в БД СОТА и проектирование дополнительных возможностей  в рамках разрабатываемого тренажера.
Среда распределенного моделирования СОТА является гибким и эффективным программным инструментом для построения системы моделирования, позволяющим решать широкий круг задач при разработке сложных комплексных тренажеров.
Использование данной среды дает возможность эффективно и в кратчайшие сроки не только создавать новые тренажеры, тренажерно-моделирующие комплексы и обучающие системы, но и наращивать их функционал и интегрировать в единое информационное пространство ранее созданные тренажеры, что является актуальной задачей при наличии множества поколений созданных тренажерных систем.
Реализации информационного взаимодействия тренажеров посредством набора шлюзов системы моделирования СОТА это один из практических примеров решения задачи взаимодействия различных тренажеров и формирования единого информационного пространства, обладающего набором единообразных интерфейсов доступа и управления.
Постоянный рост производительности вычислительных средств и сопутствующий ему прогресс средств имитации визуальной обстановки, существенно приближающих генерируемое виртуальное пространство к реальному, заставляют разработчиков систем обучения прибегать к данным средствам все чаще.
О мировом опыте Технология и способы использования систем имитации визуальной обстановки  в процессе обучения для каждой из предметных областей тренажерной техники различны от замкнутых систем на базе некоторых ноу-хау разработчика до опирающихся на мировые стандарты глобальных систем разработки и внедрения.
Интерактивное взаимодействие в виртуальном окружении позволяет погружать пользователя в трехмерную интерактивную модель изучаемого явления или предметной области и обеспечивает естественное интуитивное взаимодействие пользователя с моделью согласно заданному сценарию.
Благодаря этому реализуются принципиально новые возможности информирования, обучения и тренировки пользователя, недоступные при использовании традиционных информационных систем и обучающих программ.
В последние годы стремительно растет интерес к технологиям интерактивного взаимодействия со стороны военных и образовательных ведомств различных стран, космической промышленности, авиаи машиностроительных корпораций, медицинского сообщества и индустрии развлечений.
Мировым лидером в данной области является компания Presagis [1] со своим комплексом программных средств, обеспечивающих имитацию различных объектов: подстилающей поверхности Земли, поверхности моря, атмосферы, образцов военной техники, антропоморфных объектов, всевозможных визуальных эффектов.
Комплекс программных средств Presagis включает в себя редакторы геометрических объектов, визуализаторы различных виртуальных миров, редакторы сценариев, серверы моделирования и иные средства разработки и внедрения.
Результатом разработок Presagis является так называемая COTS-система готовая к использованию программно-аппаратная среда коммерческого применения для военных целей.
Базисом комплекса программных средств компании Presagis стала система стандартов мирового и локального уровней, обеспечивающих правила взаимодействия различных компонент системы.
Собственный опыт.
Демонстрационный режим, при котором обучаемый выступает в роли наблюдателя.
В этом режиме обучаемому демонстрируются действия над управляемыми объектами, реакция объектов на управляющие воздействия, обеспечиваются звуковое сопровождение выполняемых действий, дублирующее текстовое комментирование, подсветка активных объектов виртуальной среды.
Данный режим аналогичен лекционной подготовке и требует от обучаемого только внимания.
Тренировочный режим, при котором обучаемому предоставляется возможность выполнить требуемую последовательность операций с контролем действий.
В этом режиме обучаемый средствами ввода СИВО  воздействует на объекты виртуальной среды.
Реакция объектов соответствует штатному поведению и выражается в виде переключения состояния тумблеров, открытия задвижек, включения световых индикаторов и более сложного поведения.
Измененное состояние моделируемых объектов переводит объект управления, которым может быть сложный техногенный объект или боевая машина, в новое состояние.
В данном режиме осуществляется контроль выполняемых действий обучаемого согласно требуемой последовательности операций и своевременно выводится подсказка о неверных и последующих действиях.
Режим позволяет обучаемому попробовать применить полученные начальные знания для работы с объектом управления.
Экзаменационный режим аналогичен тренировочному с той лишь разницей, что контроль действий обучаемого осуществляется скрыто от пользователя.
По результатам работы собирается статистика выполненных действий, как правильных, так и неправильных, на основании которой оцениваются действия обучаемого.
Данный режим позволяет обучаемому проверить полученные знания и может служить для комплексной оценки его подготовленности.
Объекты формализации Представленные режимы взаимодействия определяют следующие задачи, которые стоят перед СИВО: автоматическое воспроизведение сценария работы с объектом изучения; обеспечение интерактивного взаимодействия обучаемого с виртуальной средой; запись, воспроизведение и анализ выполненных действий обучаемого.
Автоматическое воспроизведение сценариев Процесс подготовки в демонстрационном режиме подразумевает необходимость автоматического воспроизведения согласно сценарию некоторого перечня событий, изменяющих СИВО и обеспечивающих требуемое аудиовизуальное представление процессов управления объектом изучения.
События сценария, происходящие в виртуальном мире, можно классифицировать, воспользовавшись терминологией базовых сущностей системы виртуальной реальности.
При создании сценариев демонстрации возникает проблема приведения тематического содержания задачи демонстрации к функциональным возможностям системы воспроизведения виртуальных миров.
Система воспроизведения способна обеспечить лишь ограниченный набор анимационных возможностей и визуальных эффектов, так что решение задачи создания сценария должно осуществляться в контексте тех ограничений, которые имеет СИВО.
На рисунке 2 приведено расширенное представление набора анимационных возможностей объектов виртуального мира.
Возможности воспроизводящей системы по обеспечению событий сценария можно определить с помощью множества Veng, включающего все анимационные, текстовые и звуковые события, которые могут возникнуть в данной системе.
Граф сценария, составленного из n событий, показан на рисунке 3, из которого видно, что это ориентированный граф, обеспечивающий линейную  последовательность событий без ветвлений и циклов.
Интерактивное взаимодействие Согласно рисунку 2, реакции объектов виртуальной среды на управляющие воздействия обучаемого с помощью средств ввода СИВО составляют достаточно обширный перечень.
Размерность его определяется возможностями воспроизводящей системы и включает различные анимационные последовательности, характеризующие все тонкости работы того или иного оборудования.
Связь системы интерактивного взаимодействия Interact с орграфом сценария Gscn выражается соотношением U, UUpr, O, OObj, S, SStt, что UVscn.
Иными словами, событиями сценария могут являться некоторые действия над объектами, находящимися в соответствующем состоянии.
Запись и воспроизведение Ключевым моментом в обеспечении тренировочного и экзаменационного режимов работы СИВО являются запись и воспроизведение  выполненных обучаемым действий.
В перечисленных режимах обучаемый осуществляет управление виртуальными объектами СИВО путем воздействия на них с помощью имеющихся средств ввода.
Полученный по результатам работы граф может быть использован при решении задачи контроля выполняемых действий и их оценивания.
Движением по дугам графа Gctl осуществляется контроль поступающих от обучаемого действий, и в случае выполнения неверных манипуляций производятся информирование и ожидание правильных действий.
Оценка деятельности обучаемого посредством системы ЗВ Анализ деятельности обучаемого на базе графа записи и воспроизведения Gzv заключается в сопоставлении цепочки действий обучаемого с последовательностью контрольного графа Gctl и в отыскании ошибок.
Ошибки, связанные с невыполнением тех или иных действий, можно назвать фактическими.
Ошибки подобного рода неизменно ведут к достижению неверного с точки зрения управления.
объектом результата и должны быть учтены при формировании оценки.
Граф с наглядным представлением такой ошибки показан на рисунке 5.
Работа со средствами ввода СИВО, как и реальная работа с оборудованием, не исключает варианта возникновения случайных ошибочных действий, которые могут быть исправлены путем возврата к ситуации, приведшей к неправильной последовательности.
Ошибки данного типа можно назвать случайными.
Случайная ошибка в составе графа записи и воспроизведения показана на рисунке 6.
В некоторых ситуациях случайные ошибки могут привести к достижению неверного состояния у объекта управления.
Предположим, что событие V2 на рисунке 6 знаменует включение некоторого оборудования, а событие V5 вызывает его отключение.
При этом действия V3 и V4, связанные с выполнением технологических операций на включенном оборудовании, не имеют смысла после выполнения действия V5.
Для выявления случайных ошибок, приводящих к неверному результату, необходимо определить на контрольном графе Gctl группы узлов, допускающие возможность возврата и повторения действий в пределах своей группы.
Таким образом, при выявлении в цепочке графа записи и воспроизведения Gzv узла с индексом, не соответствующим заданной последовательности, факт обнаружения случайной ошибки Error при переходе между узлами V и V, приводящей к достижению неверного состояния объекта управления, определяется как Привязка к системе моделирования Предложенная модель оценки деятельности обучаемого носит исключительно качественный характер, так как оценивает последовательность действий обучаемого.
Однако в реальности выполнение технологических операций связано с событиями, возникающими в различные моменты времени, имеющие случайный или определяемый некоторой закономерностью характер.
Например, для выполнения очередного шага сценария необходимо дождаться, чтобы некоторые параметры управляемой системы достигли требуемого значения.
Оценка действий обучаемого по соблюдению временных и иных измеряемых величин вносит количественные характеристики контроля и повышает степень значимости получаемых результатов.
Для решения задачи количественной оценки требуется привязка сценариев проведения тренировки к некоторым модельным данным.
Математическая модель в общем случае представляет собой тактированную по времени систему, однозначно определяющую для некоторой совокупности управляемых объектов их состояние в заданные моменты времени.
Математическая модель функционирует на базе текущих данных состояния оборудования и поступающих управляющих воздействий, накапливая все изменения в работе оборудования.
Восстановление состояния системы для некоторого момента времени в данном случае возможно только при наличии всей предыстории эволюции системы, то есть сохранении времени работы и моментов возникновения тех или иных событий.
Таким образом, при фиксации очередного события в цепочке графа записи и воспроизведения Gzv осуществляется проверка контролирующей информации Control с определением факта возникновения ошибочного действия: 0, если, , , , ; 1, если, , , ,.
Устранение выявленных недостатков возможно путем более углубленной взаимосвязи сценариев выполнения действий с математическими моделями объектов управления.
Опыт разработок подсказывает, что развитие в данном направлении приведет к созданию полноценной тренажерной системы, однако при этом существенно возрастает сложность такой системы.
В заключение следует отметить, что в статье представлена формализация задачи обучения персонала средствами систем имитации визуальной обстановки.
Описанные подходы реализованы при создании в Центре тренажеростроения  средств подготовки космонавтов для работы на борту МКС с научной аппаратурой и при проведении космических экспериментов.
Разработанные по описанной схеме программные продукты используются в НИИ ЦПК имени Ю.А.
Гагарина  в качестве наглядных пособий при подготовке космонавтов.
