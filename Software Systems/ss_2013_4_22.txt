
За счет сохранения информации о происхождении сделанных выводов и анализа возникающих противоречий ATMS удается отсекать те подмножества предположений, которые были сделаны неверно.
Хотя ATMS в своей исходной форме была лишь инструментом репрезентативного отображения результатов логического вывода, в ходе исследований удалось представить ее в виде, достаточном для использования в качестве инструмента поддержки логического вывода при диагностировании логических комбинационных схем.
Построенная на основе использования предположений диагностическая система позволяла делать прогнозы относительно возможных неисправностей элементов диагностируемой системы, проводить анализ неисправностей и предлагать пользователю наиболее выгодные  места для снятия показаний.
Подобное представление ATMS показало хорошие результаты, позволив диагностической системе работать с неполными входными данными  и с противоречивыми данными  и значительно сузить пространство логического вывода [3, 4].
Дальнейшее исследование позволило расширить область применения ATMS в качестве поддержки логического вывода систем диагностирования класса произвольных сложных стационарных интеграционных систем.
За счет расширения области применения ATMS превратилась из узкоспециализированного, носящего, скорее, теоретический характер инструмента в мощную прикладную систему поддержки логического вывода систем диагностирования.
Недостатком полученного результата являлось жесткое ограничение, унаследованное разрабатываемой системой от классической ATMS: строгая ориентированность на логику высказываний.
Вышеозначенные проблемы практически полностью нивелируют преимущества от использования ATMS, которые были выявлены на предыдущих этапах исследования.
В связи с этим расширение ATMS на область логики предикатов является важной, актуальной задачей, которая и рассматривается в статье.
фактом называется утверждение, чья истинность точно определена.
предположением называется утверждение с неопределенной истинностью, однако временно принятое истинным.
Сделаем предположения об истинности нескольких утверждений, истинность которых еще не определена.
Основным материалом для обработки системы поддержки истинности являются метки утверждения.
меткой утверждения является множество предположений, на основе которых это утверждение выведено .
утверждение Nogood выделяется для удобства обработки противоречивых множеств предположений.
Все операции, производимые над обычными утверждениями, аналогично производятся и над утверждением Nogood.
Определим условия применимости правил вывода: посылка условно истинна, если ее множество поддержки определено; таким образом, условно истинными являются предположения и утверждения, полученные на основе предположений в ходе вывода; формально к условно истинным также относят и заведомо истинные утверждения, так как их метка, хотя и является пустой, но все же определена; правило применимо, если все его посылки условно истинны; поддержкой результата применимого правила является объединение множеств поддержки его посылок; если в ходе логического вывода получены результаты, противоречащие заведомо истинным фактам, поддержка этих результатов является противоречивой.
Опишем правила минимизации меток [4, 8].
Любое множество предположений, содержащее противоречивое множество, противоречиво.
Противоречивое множество предположений не может быть поддержкой утверждения.
Если поддержка метки содержит противоречивое множество предположений, это множество может быть удалено.
Поддержка утверждения не должна быть избыточной: если метка противоречивого утверждения содержит два множества предположений и, причем, тогда множество может быть удалено из метки.
Рассмотрим пример, иллюстрирующий процесс минимизации меток.
Значит, множества и могут быть удалены из поддержки соответствующих меток .
Подобное изменение состояний системы характерно для работы ATMS и говорит о том, что с каждым добавлением уточняющей информации, с одной стороны, уточняется множество поддержки утверждений, с другой сужается противоречивое подмножество предположений.
Оперируя предположениями и полученными на их основе выводами, система способна находить множества, содержащие ложные предположения, и локализовывать предположения, сделанные ошибочно [8].
Алгоритм ATMS представляет собой итерационное добавление утверждений о диагностируемой системе, поиск противоречивых множеств поддержки, добавление и обновление меток и анализ следующего места снятия показаний .
Формально это описание выглядит следующим образом.
связь с рассуждающей системой, поставляющей новые утверждения для обработки, множество сделанных предположений.
найти противоречивое подмножество предположений, то есть множество предположений, сделанных неверно.
критерий причины противоречия выбирается в зависимости от задачи; точным критерием является мощность противоречивого множества: если поддержка утверждения содержит множество из одного элемента, то это предположение и является причиной противоречия.
Отметим, что нахождение наиболее подходящего места для снятия показаний является отдельной и далеко нетривиальной задачей.
Точных методов для общего случая не существует.
Эвристические же методы калибруются в первую очередь под специфику отдельных задач.
Процедура добавления нового утверждения add_sentence имеет следующий вид.
добавляемое утверждение, полученное в процессе рассуждения, и его метка .
добавить утверждение в базу знаний, обработать возможные противоречия, актуализировать базу знаний по итогам обработки.
Проверка на наличие противоречия заключается в следующем: содержится ли одинаковое множество поддержки в метках взаимоисключающих утверждений.
Процедура минимизации меток заключается в процессе последовательного применения правил минимизации.
Поиском применимых правил занимается блок логического вывода: это может быть простая процедура перебора или процедура с эвристическими элементами.
Несмотря на то что ATMS позиционирует себя как система, поддерживающая вывод в пропозициональной логике, в описании ее работы пропозициональность практически не используется.
Действительно, ATMS не является системой логического вывода, это надстройка над выводом, позволяющая делать предположения, собирать информацию о предположениях, на основе которых были сделаны те или иные выводы, и анализировать получаемые противоречия.
В информации о том, как делаются выводы, система ATMS не нуждается.
Основная проблема использования ATMS в логике предикатов первого порядка что взять в качестве предположений.
В логике высказываний в качестве предположений авторы использовали элементарные высказывания, в логике предикатов им соответствуют эрбрановские фундаментальные примеры, то есть предикаты, в которых каждой из переменных было присвоено конкретное значение из универсума Эрбрана [2].
Алгоритм ATMS при этом остается таким же, как и в случае логики высказываний; действительно, использование фундаментальных примеров сводит задачу анализа предположений в ATMS к ее пропозициональной форме, а задача вывода  новых фактов переносится на систему логического вывода.
Единственной и важной проблемой использования фундаментальных примеров является их количество: для реальных задач база предположений может обладать большой размерностью, что в значительной мере снизит скорость поиска ложного предположения на этапе анализа противоречий.
ATMS atms_pred_exists для случая объединения предположений фундаментальных примеров.
связь с рассуждающей системой, поставляющей новые утверждения для обработки, множество сделанных предположений.
найти противоречивое подмножество предположений, то есть множество предположений, сделанных неверно.
добавления нового утверждения add_sentence_all имеет следующий вид.
добавляемое утверждение, полученное в процессе рассуждения, и его метка .
добавить утверждение в базу знаний, обработать противоречия, актуализировать базу знаний по итогам обработки.
Подводя итоги, отметим, что в ходе исследования рассмотрены четыре способа применения ATMS: в логике высказываний; в логике предикатов с использованием фундаментальных примеров в качестве предположений; в логике предикатов с использованием предположений как общезначимых предикатов; в логике предикатов с использованием предположений как объединения предположений, являющихся фундаментальными примерами, на заданной области определения.
Каждый из рассмотренных способов имеет свои положительные и отрицательные стороны.
Применение ATMS в логике высказываний позволяет использовать универсальный аппарат трансляции схем в систему логических правил и всю информацию, которую дает описание системы: иногда удается получить значительную часть результатов уже на этапе добавления исходных данных, что снижает дальнейшее время поиска противоречия.
Минус использования логики высказываний в большом количестве логических правил, описывающих систему, зависящем не только от количества элементов, но и от количества их состояний .
Логика предикатов первого порядка позволяет создавать общие модели систем благодаря использованию меньшего числа правил, а механизмы унификации дают возможность ускорить работу с ними по сравнению с аналогичной работой в логике высказываний.
Отрицательным моментом является то, что из-за общности теряется уникальность частных решений: сделать прогноз, аналогичный тому, который можно получить в логике высказываний, уже не удастся.
За счет использования в качестве предположений эрбрановских примеров удалось достаточно быстро определить требуемые результаты, что может быть полезно тогда, когда множество частных предположений, которые надо проверить, невелико.
Использование общезначимых предикатов в качестве предположений позволяет значительно быстрее  выявить их ложность, что может быть полезно для анализа общей непротиворечивости системы, но не для получения конкретных результатов.
Использование же в качестве предположений объединения предположений фундаментальных примеров может дать нужный результат, выявив в том числе ложность тех предположений, которые, собственно говоря, и не ожидались.
Таким образом, каждый из рассмотренных приемов позволяет достигать корректного результата и обладает своими уникальными достоинствами.
Это говорит о том, что каждый из них имеет право на жизнь, а за счет комбинирования различных подходов для решения конкретных задач можно достичь эффективных результатов.
