:004.424.4:519.87.
Качество документального тематического поиска, то есть поиска документов, содержащих координированную информацию в заданном тематическом сегменте, не всегда удовлетворительно.
Несмотря на наличие мощных поисковых систем для информационных ресурсов Интернета или для специализированных БД, процесс продолжает оставаться трудоемким и слабо поддерживается программно и методологически.
В данной статье описывается реализация генетического алгоритма для выявления и отбора наиболее релевантных результатов, полученных в ходе последовательно выполняемых операций тематического поиска.
Обсуждаются особенности тематического поиска, обосновывается применение генетического алгоритма, описываются компоненты целевой функции, рассматриваются основные шаги и параметры алгоритма.
Описывается программная реализация: основные объектные модели, пользовательский интерфейс, основная библиотека алгоритма, модули морфологического анализа, семантического анализа сходства текстов, поиска, управления БД, управления метаданными.
Представляется, что описанные в настоящей статье подходы к организации тематического поиска могут быть успешно применены во многих областях .
Каждый пользователь Интернета искал в сети конкретные факты и, как правило, находил либо точно то, что искал, либо что-то близкое.
Поиск фактов это поиск информационных объектов с определенными смысловыми и/или технологическими характеристиками.
Результат такого поиска описание объекта, события или явления с заданными значениями их свойств.
Другой вид поиска тематический.
Это поиск целых категорий  координированной информации в заданном тематическом сегменте, а не отдельных информационных объектов с заданными характеристиками .
Результатом тематического поиска, помимо набора фактов, следует считать сведения о ретроспективе, перспективе, взаимосвязях найденных информационных объектов, о текущих и вероятных трендах.
Примеры тематического поиска: подборка материалов для патентных исследований или для обзоров источников научнотехнической, коммерческой и социальной информации, поиск ценных коммерческих данных и т.п.
При тематическом поиске неизбежно возникает ряд вопросов.
Как совместно оценить релевантность документов, найденных разными запросами? Является ли ранжирование результатов поисковой системой корректным с позиций ожиданий пользователя? Все ли результаты, доступные для непосредственной оценки, соответствуют ожиданиям пользователя? Все ли результаты, соответствующие ожиданиям пользователя, попали в число доступных для непосредственной оценки? Как отфильтровать документы, не относящиеся по сути к искомой тематике? Могут ли обнаруженные эффективные решения, относящихся к другим областям применения, успешно использоваться в данной области? Однозначно ответить на эти вопросы в рамках тривиальных решений невозможно.
Во-первых, искомая информация часто находится на стыке смежных областей.
Во-вторых, одновременно с информацией о собственно предмете поиска  желательно получать сведения о применениях, рисках, особенностях, пользователях, авторах, правообладателях, производителях.
В-третьих, обычной является необходимость одновременного использования различных  критериев отбора наиболее эффективных практик.
Как следствие, пользователи вынуждены применять в поисковых запросах множество сочетаний ключевых понятий, уточняя их в ходе анализа промежуточных результатов поиска.
При этом все найденные документы подробно не рассматриваются .
Порядок действий пользователей при выполнении ими тематического поиска во многом напоминает эволюционный процесс.
Пользователи ищут эффективные наборы и сочетания ключевых слов в запросах, имея в виду получение максимально релевантных результатов и параллельно анализируя содержание найденных материалов.
Однако не факт, что при этом они будут использовать какую-либо обоснованную методику.
Обычными подходами являются использование пользователями собственного опыта работы с материалами заданной тематики и/или уточнение запросов ключевыми понятиями из уже найденных пертинентных текстов.
Он может быть предназначен для организации эволюционного процесса, который формирует устойчивую и эффективную популяцию поисковых запросов; образует соответствующий поисковый образ документов или семантического ядра; приводит к получению релевантного искомого множества искомых документов; создает предпосылки для автоматического получения классифицированного и ассоциированного множества документов.
Значение определяет ранг результата запроса.
Значение целевой функции для каждого запроса вычисляется как средний ранг результатов этого запроса, а значение целевой функции для популяции запросов как средний ранг запросов этой популяции.
В таком виде целевая функция используется в текущей реализации алгоритма.
Опишем кратко основные шаги алгоритма.
1.
Подготовка ключевых слов, формирующих поисковый образ множества документов заданной тематики.
2.
Выбор поисковой системы.
Текущая реализация алгоритма предусматривает выбор поисковых систем Bing или Google, а также использование XQuery для поиска в БД XML-документов.
3.
Формирование исходной популяции запросов  комбинации ключевых понятий  из поискового образа документов.
4.
Выполнение запросов популяции формирование множества дескрипторов найденных документов .
5.
6.
Селекция лучших запросов по их пригодности или значению целевой функции.
7.
Выбор родительских пар запросов для формирования следующего поколения  запросов.
Использован генотипный аутбридинг.8.
Скрещивание запросов.
Операция реализуется дискретной рекомбинацией или одноточечным кроссинговером.
Особенностью является генерация запросов-потомков с использованием синонимов для одновременного расширения базы ключевых понятий и наследования семантики запросов-родителей.
9.
Вероятностная мутация запросов.
10.
Формирование новой популяции элитарный отбор из объединенной популяции запросовродителей и запросов-потомков.
11.
Остановка алгоритма достижение стабильности популяции запросов или заданного  числа проходов алгоритма.
Отметим, что более подробно эти шаги описаны в [3].
Общая архитектура приложения, реализующего генетический алгоритм, представлена на рисунке 2.
Приложение построено на платформе.
Net Framework.
На рисунке 3 приведено графическое изображение этой объектной модели.
Отметим, что в настоящее время для различных программных платформ разработано довольно большое количество реализаций генетических алгоритмов.
С другой стороны, некоторые авторы делают попытки унификации и стандартизации подходов к разработкам [5], а другие ориентируются на специальное применение генетических алгоритмов [6, 7].
При разработке основной библиотеки классов обсуждаемого в статье алгоритма GAF авторами было принято решение об оригинальной реализации основных генетических операций и сопутствующих процедур алгоритма.
Указанные причины не позволяют использовать только имеющиеся решения при реализации генетических алгоритмов.
При реализации алгоритма была применена программная оболочка, которая в пространстве имен MorphyService реализует классы, описанные вместе с их основными членами в таблице 2.
На рисунке 4 приведено графическое изображение укрупненной объектной модели MorphyService.
Отметим, что в качестве альтернативы могут быть использованы эталонные тексты, адаптивно формируемые в ходе выполнения алгоритма.
Модуль использует экспериментальную платформу, реализующую модель векторного пространства документов [8].
Для доступа к указанной платформе используются объекты класса TextSimilarity.
Близость текстов интерпретирована как косинусная мера близости, , где в числителе скалярное произведение векторов документов и, а в знаменателе произведение евклидовых норм этих векторов.
Все модули выполняют поисковые запросы к соответствующим хранилищам данных и обеспечивают унифицированное представление коллекций результатов.
Отметим, что Bing Search API и Google Custom Search API должны быть лицензированы для коммерческого применения и требуют регистрации приложений.
Реализует слой доступа к данным общей архитектуры ПО [9].
Для обеспечения операций манипулирования данными используются объекты класса.
При реализации класса использовались компоненты пространства имен, которое является поставщиком данных платформы.
Net Framework  для доступа к БД SQL Server и включает службы доступа к данным ADO.NET.
Перечень основных таблиц используемой БД с их описанием представлены в таблице 3.
Для обеспечения операций сохранения результатов работы алгоритма используется структура данных, общий вид XML-схемы которой следующий: При реализации модуля был применен класс System.Xml.Serialization.XmlSerializer платформы.
Представим функциональные группы параметров.
используемая поисковая система; количество запросов в каждой из генерируемых алгоритмом популяций запросов; количество ключевых слов в каждом генерируемом алгоритмом запросе; исходный набор ключевых слов и понятий, используемый для генерации запросов.
количество результатов поиска, возвращаемых после выполнения запроса; количество результатов поиска, возвращаемых после выполнения запросов популяции; количество результатов поиска, возвращаемых после выполнения запросов всех популяций; коэффициент, учитывающий расположение найденных документов на одном сервере; весовой коэффициент для аргумента целевой функции при расчете ранга результата поиска; весовой коэффициент для аргумента целевой функции при расчете ранга результата поиска; весовой коэффициент для аргумента целевой функции при расчете ранга результата поиска; способ вычисления целевой функции для групп результатов поиска при выполнении отдельных запросов или для популяции запросов.
множитель для вычисления критерия отбора запросов-родителей при скрещивании; вероятность мутации запроса.
заданное число проходов алгоритма; предельное значение для среднеквадратичного отклонения целевой функции ; предельное число проходов алгоритма.
индикатор автоматического сохранения результатов работы алгоритма, имена файлов для сохранения результатов и параметров, строка для связи с БД и т.п.
Для доступа к метаданным алгоритма используются объекты класса Options.
Net Framework для организации их взаимодействия с пользователями.
Интерфейс обеспечивает рабочий цикл алгоритма GAF и показывает ход выполнения его отдельных шагов.
Соответственно обеспечивается слой представления  согласно [9].
Он играет важную роль в обеспечении адаптивности функционирования поисковых механизмов: повышает эффективность тематического поиска документов за счет улучшения качества поисковых запросов и точности оценки релевантности результатов поиска.
Разработанное ПО алгоритма создает достаточно широкий базис для дальнейших исследований и разработок.
Основными направлениями могут быть следующие.
Исследование поведения алгоритма на представительной номенклатуре запросов для различных тематик.
В частности, интерес могут представлять зависимости значений целевой функции от количества запросов популяции, количества ключевых слов в запросе, количества проходов алгоритма и других параметров.
Уточнение целевой функции.
Одно из предложений введение аргумента, учитывающего условия, задаваемые поисковому агенту параметрами уже найденных документов.
Развитие интерпретаций эволюционных операций  в контексте создания эффективных поисковых запросов.
Так, представляет интерес выявление новых значимых ключевых понятий в процессе обработки результатов поиска для предотвращения преждевременной сходимости.
Кроме того, интерес представляют совершенствование реализации алгоритма, особенно в части приемлемой скорости вычислений; разработка web-сервиса для обеспечения публичного использования рассмотренной реализации генетического алгоритма как дополнения поисковых систем, а также мобильная версия пользовательского интерфейса.
