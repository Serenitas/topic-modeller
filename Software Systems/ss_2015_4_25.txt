
В последние годы интенсивно разрабатывается новое научное направление природные вычисления, объединяющее математические методы, в которых заложен принцип природных механизмов принятия решений.
К таким методам относятся методы моделирования отжига, эволюционного моделирования, генетические алгоритмы, методы эволюционной адаптации, алгоритмы роевого интеллекта, муравьиные алгоритмы.
В моделях и алгоритмах эволюционных вычислений ключевым элементом является построение начальной модели и правил, по которым она может изменяться .
Были предложены разнообразные схемы эволюционных вычислений, в том числе генетический алгоритм, генетическое программирование, эволюционные стратегии, эволюционное программирование.
Общие концепции и методологический подход к построению эволюционных вычислений, основанных на природных системах, а также основные гипотезы, закономерности и положения концепции эволюционных вычислений отмечены в [1, 2].
В настоящее время известно применение генетических алгоритмов для оптимизации широкого круга задач, в том числе задач криптоанализа.
В [310] рассматривались методы организации криптографических атак на традиционные симметричные криптосистемы, использующие шифры перестановки и замены, а также на блочные криптосистемы с использованием методов эволюционной оптимизации и генетического поиска.
Недостатком генетических алгоритмов является наличие слепого поиска.
Это в общем случае приводит к генерации решений с нарушениями, что увеличивает время поиска и требует дополнительного контроля, к генерации большого количества одинаковых решений, генерации большого количества плохо приспособленных решений, что в общем случае может привести к попаданию в локальный оптимум [11].
Поэтому представляет интерес применение эвристических методов, инспирированных природными системами, в которых осуществляется поэтапное построение решения задачи .
К методам данного вида относят и муравьиные алгоритмы, идея которых состоит в моделировании поведения муравьев, связанного с их способностью быстро находить кратчайший путь от муравейника к источнику пищи.
Как отмечено в [12], колония муравьев рассматривается как многоагентная система, в которой каждый муравей-агент функционирует автономно на основе простых правил.
Однако в противоположность примитивному поведению отдельных агентов поведение всей колонии оказывается достаточно разумным.
Исследования в этой области проводятся с середины 90-х годов, и на сегодняшний день известно их применение к задаче о коммивояжере, квадратичной задаче о назначениях, к задачам о раскраске графа, определения оптимальных маршрутов в коммутационных сетях, маршрутизации транспортных средств, борьбы с вредоносным ПО.
В [13] рассмотрен возможный подход к реализации криптоанализа блочных алгоритмов шифрования и показано сведение криптоанализа к классической задаче о назначении, решаемой с помощью алгоритма муравьиных колоний.
В настоящее время актуальной является задача криптоанализа блочных криптосистем, так как переход к блочному шифрованию открывает дополнительные возможности для повышения стойкости криптоалгоритмов.
Сведения по криптостойкости ряда блочных алгоритмов, в частности, к линейному и дифференциальному криптоанализу, а также результаты его применения к алгоритму DES приведены в [14, 15].
Описание некоторых блочных стандартов шифрования (в том числе стандарта DES) с введенными терминами и обозначениями дано в [1517].
Oтличительной особенностью применения биоинспирированных методов криптоанализа является возможность использования самого алгоритма шифрования  в качестве целевой функции для оценки пригодности ключа, определенного с помощью генетических операций.
Это особенно существенно при реализации криптоанализа блочных алгоритмов шифрования, в которых применяется многократная обработка блоков текста и на каждом цикле данные преобразуются при участии вспомогательного ключа, сформированного из секретного ключа.
Как отмечено в [15], выбор числа циклов определяется требованиями криптостойкости, то есть чем больше циклов, тем выше криптостойкость и больше времени требуется на шифрование .
В связи с этим процесс криптоанализа, связанный с какимилибо преобразованиями самого алгоритма шифрования, может оказаться затруднительным и актуальной становится задача исследования возможности применения биоинспирированных алгоритмов для криптоанализа блочных криптосистем, поскольку при использовании данных алгоритмов процесс определения секретного ключа  зависит не столько от сложности шифрующих преобразований, сколько от самого биоинспирированного метода, который должен обеспечивать достаточное разнообразие генерации ключей.
Увеличение производительности природных алгоритмов наряду с параллельной реализацией на низшем уровне  возможно также при распараллеливании на высшем уровне .
Чрезвычайно важным свойством эволюционных стратегий является их естественный внутренний параллелизм.
При этом по сравнению с градиентными методами различие во времени расчета целевой функции при различных значениях параметров не оказывает влияния на эффективность распараллеливания [18].
Основные технологии распараллеливания алгоритмов  описаны в [18, 19], методы разработки параллельных программ в [20, 21].
Разработку параллельной версии алгоритма рассмотрим на примере стандарта DES.
Структурная схема криптоанализа с использованием метода муравьиных колоний и структурная схема цикла алгоритма DES приведены на рисунках 1, 2 и в работе [13].
На основе структурной схемы алгоритма муравьиных колоний и информационно-логической граф-схемы алгоритма DES, приведенных в [5, 6], получим информационно-логическую граф-схему алгоритма криптоанализа.
Связи по управлению показаны на рисунке двойной линией, по информации одинарной.
Применительно к структурной схеме алгоритма DES будем предполагать, что в выходном блоке формируется блок исходного текста, на входной блок поступает блок шифртекста .
Для данного графа введем в рассмотрение матрицу следования.
На полученную матрицу следования ` наложим матрицу логической несовместимости, дополненную транзитивными связями.
Получим матрицу независимости М, по нулевым элементам которой можно указать множество операторов, каждый из которых может быть выполнен одновременно с оператором, соответствующим номеру строки.
Таким образом, на основе данной матрицы М можно определить семейство всех внутренне устойчивых множеств.
Максимальное внутренне устойчивое множество даст оценку максимального числа процессоров, требуемых для реализации алгоритма [20].
Отсюда с учетом принятых ранее допущений следуют утверждения.
1.
2.
3.
4.
Для определения точной оценки числа процессоров, необходимых для реализации алгоритма при заданных временных ограничениях, воспользуемся методами, описанными в [20, 21].
Рассмотрим следующую задачу: для алгоритма криптоанализа на основе построенного информационно-логического графа и для заданного времени найти необходимое наименьшее число процессоров однородной вычислительной системы и план выполнения на них операторов.
Данная задача рассматривалась применительно к информационно-логической схеме криптоанализа алгоритма DES с помощью генетического алгоритма в [22].
Аналогичным образом рассмотрим метод решения задачи на примере алгоритма криптоанализа стандарта DES с помощью метода муравьиных колоний, представленного информационно-логическим графом на рисунке 3.
На первоначальном этапе определим скалярные веса вершин, отражающих время выполнения операций.
На рисунке 3 веса вершин указаны рядом с их номерами, промасштабированы путем деления на 10 и округлены до ближайшего целого сверху.
Используя значения и и методику, описанную в [21], можно найти оценку минимального числа процессоров, необходимых для выполнения операторов, входящих в каждое множество  матрицы независимости М.
Построим диаграммы ранних и поздних сроков окончания выполнения операторов и произведем такое распределение временных границ операторов, при котором число используемых процессоров минимально.
Диаграммы ранних и поздних сроков выполнения операторов имеют вид, показанный на рисунке 4.
Таким образом, возможно такое распределение выполнения операторов данного множества ВНО, при котором число процессоров равно 1.
Рассмотрим множества ВНО, содержащие 3 элемента.
Таким образом, для данного множества ВНО минимальное число процессоров составит 2.
Для данного множества ВНО требуемое число процессоров составит 1.
Для данного множества ВНО оценка минимального числа процессоров составит 2.
Для данного множества ВНО требуемое число процессоров также составит 1.
Таким образом, поскольку оценка необходимого минимального числа процессоров составляет 2, дальнейшее исследование множеств ВНО, содержащих 2 элемента, не имеет смысла.
Докажем, что эта оценка является минимальной, и определим план выполнения операторов с помощью алгоритма, представленного в [21].
Сущность данного алгоритма заключается в нахождении максимального множества взаимно независимых операторов в матрице независимости, последовательном проведении фиктивных связей в информационно-логическом графе, не увеличивающих длину критического пути.
В матрице независимости М определим произвольное множество ВНО, содержащее элементов, для которого >.
Связи 4 3 и 8 4 увеличивают, связь 3 4 не изменяет его.
Отразим данную связь в матрице следования и сформируем новую матрицу независимости М`.
В матрице ` определим следующее множество ВНО, содержащее более 2 операторов.
Между вершинами этого множества проведем фиктивную связь 4, не приводящую к увеличению.
Получим матрицу независимости ``.
Допустимая комбинация связей 8 6.
После ее проведения получим матрицу независимости ```.
Проведем допустимую фиктивную связь 7 6.
Отсюда следует, что сформулированные выше утверждения 14 можно обобщить следующим образом.
Таким образом, рассмотрен подход к реализации криптоанализа путем применения параллельной версии алгоритма муравьиных колоний на основе построения матрицы независимости и определения множеств ВНО.
Приведена оценка необходимого минимального числа процессоров при минимальном времени реализации алгоритма.
Представленный в работе алгоритм наиболее эффективен при реализации криптоанализа 2-го типа, то есть при определении ключа на основе известных однозначно определенных блоков исходного текста и шифртекста [13].
При реализации криптоанализа 1-го типа в случае неоднозначного получения блоков оптимального текста из заданного блока шифртекста также возможно  получение некоторого множества ключей, соответствующих оптимальным вариантам исходного текста.
Для каждого варианта ключа в этом случае требуется проверить, является ли он оптимальным для криптоанализа всего текста.
