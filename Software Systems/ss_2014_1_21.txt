:004.8.
Обязательным условием широкого использования  является сертификация, которая заключается в их формальных испытаниях специалистами, гарантирующими соответствие стандартам и нормативным документам, в частности стандарту ISO/IEC 00002.
При этом в испытаниях должно обеспечиваться заданное качество результатов решения предписанных задач.
Сертификация ПС, принятая в России, предусматривает проведение их тестирования, то есть контролируемое выполнение программы на  и анализ этого выполнения с целью обнаружения ошибок.
Становится понятным, что рациональное ограничение КМНД во многом предопределяет трудоемкость и корректность тестирования, причем неавтоматизированное определение КМНД приводит к дополнительным трудозатратам.
Таким образом, задача формирования оптимального КМНД является актуальной.
Критериями полноты тестового покрытия обычно являются количество покрытых операторов в исходном коде, покрытых ветвей в графе потока управления, покрытых путей графа потока управления.
Однако проверка возможна при наличии исходных текстов программ, в то время как государственные органы сертификации работают со скомпилированными ПС.
Поэтому логичной является постановка задачи создания автоматизированной системы формирования рационального КМНД для тестирования скомпилированных ПС.
В качестве аппарата для создания КМНД авторы предлагают модифицированные ГА.
Их предлагаемое представление позволит при сертификации ПС смоделировать тестирование с использованием исходных текстов программ.
Топология ИД была рассмотрена и представлена в виде следующих типов переменных.
Множество это все массивы ИД случайного типа, определяющие их возможные наборы.
Данные 1-го типа в основном подчиняются закону нормального распределения.
В отличие от данных 1-го типа, используемых непосредственно для получения численного значения результата при использовании ПС, данные 2-го типа используются для определения основного пути графа вычислений.
К этим же данным, естественно, относятся и ИД символьного типа  из определенного ограниченного набора.
Это корректно, так как с точки зрения влияния на ход выполнения программы они являются переменными одного смыслового содержания.
Исходные данные 3-го типа определяют разветвление пути графа вычислений.
По смыслу им соответствуют и синтаксические переменные, состоящие из наборов по две буквы .
Такие критерии, как количество покрытых ветвей и путей в графе потока управления, косвенно определяются числом переборов ИД переменных из типов 2 и 3.
Корректность работы программы в диапазоне возможных числовых значений исходных данных, используемых для непосредственных расчетов, определяется тем, насколько и с какой дискретностью перекрыта область значений переменных 1-го типа.
Рассмотрим генотип кодирования ИД для тестирования.
Топологию исходных данных удобнее представлять в виде генотипа, состоящего из трех хромосом, каждая из которых отвечает за ИД соответствующего типа.
Структура хромосом показана на рисунке 1.
Генами хромосомы являются переменные, ,.
Алгоритм создания КМНД построен следующим образом.
создаются наборы для обеспечения тестового покрытия ветвей и путей в графе потока информации, то есть они варьируют хромосомами типов 2 и 3 при фиксированном значении хромосомы 1.
Учитывая, что не видно места ветвления программы, для полного тестового покрытия необходима стопроцентная генерация возможных вариантов.
Однако на практике бывает достаточно ограничить перебор, задав для формирования КМНД процент перебора данных в переменных целочисленного 2-го типа и обеспечив полный перебор данных 3-го булева типа.
Очевидно, что, допуская определенное число повторов конкретного значения переменной при формировании КМНД и зная закон ее распределения, можно варьировать числом пройденных потоков управления.
Исходная популяция хромосом для первого этапа  получается следующим образом.
Значение каждой величины случайным образом генерируется из срединного интервала .
Третий и последующие  наборы хромосом на первом этапе строятся по следующему алгоритму.
Из исходной популяции хромосом берется набор I.
Указанный набор фиксируется в новом производном наборе хромосом.
В хромосоме 2 производного набора случайным образом мутируетсяпамять.
В полученном на шаге 3 тестовом наборе хромосома 3 заменяется хромосомой из исходного набора II.
Тестовый набор заносится в память.
Проверяется условие окончания мутации гена .
Если нет, то возврат на шаг 3, иначе шаг 6.
Проверяется условие окончания мутации предшествующего  гена.
Если нет, то переход к оператору 7, иначе шаг 8.
В последнем тестовом наборе случайным образом, исключая повторы, в хромосоме 2 мутируется предшествующий  ген.
Переход на шаг 3.
Проверяется условие окончания мутации предшествующего  гена.
Если нет, то переход к оператору 9, иначе шаг 10.
В последнем тестовом наборе случайным образом, исключая повторы, в хромосоме 2 мутируется предшествующий  ген.
Переход на шаг 3.
Проверяется условие окончания мутации  гена.
Если нет, то переход к шагу 11, иначе шаг 12.
В последнем тестовом наборе случайным образом, исключая повторы, в хромосоме 2 мутируется  ген.
Переход на шаг 3.
Если нет, то переход к последнему шагу, иначе окончание генерации тестовых наборов.
Переход на шаг 3.
Отдельно следует остановиться на процентном соотношении мутируемых вариантов генов во второй хромосоме.
Для гена, чтобы только пройти все ребра в потоке управления, достаточным будет обеспечение проверки  для его значений вариантов, где 1 количество значений вариантов гена ; 2 количество значений вариантов гена.
Применив формулу в виде, можно управлять количеством сочетаний вариантов из двух ребер, то есть числом графов в потоке управления, состоящих из двух ребер.
Коэффициент берется в частях от 1 с округлением до большего целого.
Очевидно, что коэффициент определяет часть возможных значений  гена, следовательно, зная закон рассеивания значений гена, можно определить процент перекрытия графов потоков управления из двух смежных ребер для каждого значения гена.
Варьируя значением коэффициента, можно изменять количество наборов хромосом, генерируемых на первом этапе.
Следовательно, значением величины определяется условие окончания генерации КМНД на первом этапе.
формируется КМНД для тестирования ПС с точки зрения выполнения корректности расчетов в области существования переменных, определяющих числовые данные вычислений.
С этой целью строятся варианты наборов из мутируемой хромосомы 1 и постоянного состава генов во второй и третьей хромосомах из набора I первого этапа.
Исходная популяция хромосом состоит из двух наборов, определяемых первой хромосомой.
В первом наборе в хромосоме присутствуют максимальные значения, во втором минимальные.
Остальные тестовые наборы получаются мутацией первой хромосомы исходя из того, что диапазоны каждого гена разбиты на число интервалов.
Варьируя числом интервалов, на которое разбивается диапазон всех значений переменных, можно управлять количеством наборов хромосом, получаемых на этом этапе.
Таким образом, алгоритм формирования КМНД на втором этапе следующий.
Формируем исходную популяцию хромосом.
Берем из исходной популяции хромосом набор I.
В наборе I выполняем случайным образом неповторяющуюся мутацию в гене первой хромосомы .
Запоминаем тестовый набор.
Определяем окончание мутации гена .
Если да переход к шагу 5, нет возврат к шагу 3.
Проверяем окончание мутации гена аналогично гену.
Если нет переход на шаг 6, если да переход на шаг 7.
Случайным образом выполняем мутацию гена .
Возврат на шаг 3.
Проверяем окончание мутации в гене.
Если нет переход на шаг 8, если да переход на шаг 9 и т.д.
Проверяем окончание мутации по гену.
Если да окончание генерации тестовых наборов, нет переход к последнему шагу.
Случайным образом  мутируется ген.
Возврат на шаг 3.
Таковыми являются минимальные и максимальные, а также нулевые значения, если значение какойлибо переменной меняет знак.
Минимальные и максимальные значения переменных уже были учтены при формировании хромосом на втором этапе, поэтому следует дополнительно учесть лишь нулевые точки.
Объединяя множество наборов, полученных на первомтретьем этапах, получаем конечное множество наборов данных для тестирования.
Процесс тестирования состоит в следующем.
Продукционными моделями знаний делается заключение о результате тестирования с помощью КМНД, имеет три нечетких значения: хороший, удовлетворительный, неудовлетворительный.
При этом анализируются полнота КМНД  и адекватность полученных результатов.
Полнота оценивается нечеткой переменной, имеющей три значения: достаточный, возможный, недостаточный.
Адекватность результатов расчетов оценивается нечеткой переменной, имеющей три значения: адекватный, допустимый, неадекватный.
Во вторую очередь тестируются ПС с использованием КМНД и КМНД, полученных на втором и третьем этапах, что является попыткой определить корректность выполнения расчетов на всем диапазоне возможных значений входных данных.
Продукционными моделями знаний делается заключение о результате тестирования с помощью КМНД и КМНД.
тоже имеет три нечетких значения: хороший, удовлетворительный, неудовлетворительный.
Полнота и здесь оценивается нечеткой переменной, имеющей три значения: достаточный, возможный, недостаточный.
Адекватность расчетов оценивается нечеткой переменной, имеющей три значения: адекватный, допустимый, неадекватный.
Продукционные модели созданы на основе экспертных оценок.
С целью увеличения степени достоверности результатов экспертным путем для нечетких переменных, и, разработаны числовые относительные шкалы .
В заключение отметим, что в соответствии с предложенной методикой были разработаны программные средства для автоматизированного формирования КМНД и последующего тестирования программ.
Справедливость изложенных положений была подтверждена сравнением тестирования ПС в скомпилированном виде с тестированием программ в исходных текстах.
При пробных тестированиях сгенерированные наборы данных обеспечивали необходимую полноту тестового покрытия и значительно сокращали трудоемкость тестирования по сравнению с используемыми традиционными способами.
