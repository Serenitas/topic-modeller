
Важной составляющей имитационно-тренажерных комплексов является система управления.
В качестве примера можно привести тренажеры автоматических беспилотных систем, в которых система управления используется для управления двигателем, полезной нагрузкой, исполнительными механизмами, бортовым питанием и т.д.
Система управления может быть представлена в виде функциональной схемы, элементы которой называются функциональными звеньями или функциональными блоками.
Важной задачей является автоматизация процесса создания и тестирования таких функциональных схем, а также разработка алгоритмов их расчетов в масштабе реального времени.
В области моделирования систем управления на основе функциональных схем существует большое количество разработок, например программные пакеты Simulink, Scicos, Dymola, LabView.
Рассмотрим их возможности и особенности.
Пакет Simulink [1] предназначен для проектирования систем управления и коммутации, цифровой обработки и моделирования динамических систем на основе блочных схем.
Он является составной частью программного комплекса Mathlab, с которым тесно интегрирован.
Пакет обладает широкими возможностями и имеет модульную структуру с возможностью дополнительного расширения функциональности.
Этот программный пакет широко используется по всему миру и фактически является отраслевым стандартом в области моделирования систем управления.
Это коммерческий продукт, цена которого довольно значительна.
Недорогие лицензии предлагаются лишь для научного и некоммерческого использования.
Из недостатков пакета можно отметить его сложность и громоздкость.
Аналогом программного продукта Simulink является Scicos [2] инструмент для редактирования блочных диаграмм и симуляции, входящий в пакет Scilab.
Этот программный продукт предоставляет схожую с Simulink функциональность, но является при этом некоммерческим opensource-проектом.
Еще один аналог Simulink программный пакет Dymolа [3].
Это коммерческий продукт компании Dassault Systems, предназначенный для моделирования и симуляции сложных динамических систем, включая механические, термодинамические, гидравлические, пневматические и т.д.
Основное предназначение пакета построение и отладка систем управления для сложных технических устройств на этапе их проектирования.
Продукт в наибольшей степени ориентирован на промышленное использование, его стоимость достаточно велика.
Коммерческим продуктом для моделирования систем управления на основе функциональных схем является и пакет LabView [4] компании National Instruments, он обычно используется для управления оборудованием и АСУ в промышленности.
Пакет предоставляет широкий набор блоков для обмена данных с промышленным оборудованием и различными контроллерами.
Используемые форматы данных закрыты, для использования построенной системы управления в своем приложении генерируется исполняемый код, который требует наличия runtime-библиотек.
Существуют и другие похожие продукты, предназначенные для узкого применения.
Несмотря на обилие существующих программных продуктов, на наш взгляд, актуальна задача создания более простых и доступных систем моделирования на основе функциональных схем для систем управления имитационно-тренажерных комплексов.
Разработанный в НИИСИ РАН автоматизированный программный комплекс создания, тестирования, редактирования и расчета функциональных схем предназначен для систем управления различного типа, имитационно-тренажерных комплексов управления роботами и манипуляторами, виртуальных лабораторий, обучающих систем и т.д.
Комплекс включает специализированный визуальный редактор функциональных схем и модуль их расчета в масштабе реального времени.
Модуль расчета реализован в виде динамической библиотеки, не требует дополнительной компиляции и легко подключается с помощью программного интерфейса к любым программным модулям.
Существует возможность добавления новых блоков, необходимых для реализации функциональной схемы.
Визуальный редактор позволяет выбрать нужный блок из соответствующей библиотеки и переместить его с помощью мыши в нужное место поля редактора.
Оставшиеся неприсоединенными входы  блоков будут являться входами  схемы.
В процессе проектирования можно заменить созданную функциональную схему пиктограммой макроблока и использовать его в редакторе как составную часть более сложной схемы.
Сами блоки, а также их входы и выходы в редакторе имеют всплывающие подсказки, что позволяет быстро получить краткую информацию о них.
Все это в целом дает возможность быстро разрабатывать, анализировать и выявлять ошибки функционирования структурной схемы системы управления.
На рисунке 1 показан пример функциональной схемы автоматизированной системы управления мобильным роботом.
Любая структурная схема реализует некоторый набор функций, зависящий от всех ее входов.
Вычисления в схеме производятся по сигналу от системы управления, каждое такое вычисление будем называть тактом.
Во многих случаях результаты вычислений некоторых блоков одного такта могут использоваться в этих или других блоках для вычислений в последующих тактах.
Тогда они сохраняются в памяти блоков в виде векторов их внутренних состояний.
Например, блок буферный регистр имеет два входа и и хранит в памяти последнее значение входа.
Если в очередном такте вычислений на вход поступает логическая 1, то новое значение входа посылается на выход и запоминается вместо старого значения.
Если же на вход подается логический ноль, то на выход посылается запомненное значение и в памяти оно не изменяется.
Созданная в редакторе структурная схема сохраняется в бинарном файле.
Расчет функциональной схемы осуществляется в дискретные моменты времени, так называемые такты.
Время такта определяется вызывающей оболочкой имитационно-тренажерного комплекса и может быть как фиксированным, так и плавающим.
Обозначим через номер предыдущего, а через номер текущего шага расчета.
Рассмотрим алгоритм расчета схемы и рекурсивную процедуру расчета отдельного блока.
При загрузке файла схемы формируется список всех выходных блоков.
Расчет схемы выполняется рекурсивно, начиная с этих блоков.
1.
Инкрементируется номер такта расчета схемы: ++.
2.
Цикл по от 1 до количества элементов списка.
2.1.
Вызов функции расчета дляCalcID).
3.
Конец цикла.
1.
2.
3.
Цикл по от 1 до .
3.1.
Еслицикла.
3.2.
Рекурсивный вызов функции расчета блока, связанного с).
4.
Конец цикла.
5.
Расчет векторной функции, зависящей от типа блока.
6.
Конец процедуры.
В результате выполнения данного алгоритма рекурсивно вычисляются все блоки, которые влияют на выходные.
Порядок вызова проиллюстрирован на рисунке 2 на простом примере.
Если для некоторого блока функция расчета вызывается повторно, этот блок заново не вычисляется.
Если в схеме присутствуют циклы, например для организации обратной связи, то в качестве значения на выходе блока, которое используется для обратной связи, берется значение, вычисленное на предыдущем такте.
Расчет схемы системы управления выполняется циклически в процессе работы системы управления тренажера.
Если некоторые блоки схемы не влияют на выходные, их расчет не производится.
Такой подход позволяет уменьшить вычислительные издержки и повысить эффективность работы системы управления при использовании структурных схем, обладающих избыточностью.
 имеют строение, близкое к человеческому.
Важное преимущество таких систем в том, что они позволяют наиболее эффективно решать задачи, изначально ориентированные на человека, в частности, выполнение операций с рабочими инструментами, адаптированными под человеческую руку.
Например, такие АРТС могут успешно использоваться в космической отрасли для внекорабельной деятельности.
Первый способ управления АРТС состоит в использовании виртуальных пультов [5, 6].
Виртуальный пульт представляет собой схематическое изображение робота, на котором задано расположение осей вращения его двигателей.
Пользователь с помощью клика на соответствующих элементах может выбрать один или несколько шарниров, после чего с помощью перемещения виртуального джойстика управлять движением робота в данных суставах.
Функциональная схема для реализации ручного режима организует вычисление и передачу управляющих воздействий на соответствующие двигатели.
Гораздо более удобным и надежным режимом управления является копирующий.
В этом случае управление роботом выполняет человек с помощью специального костюма экзоскелета.
Встроенные в экзоскелет датчики определяют углы поворота головы, торса, рук и ног оператора .
Заданное оператором движение должно быть отработано  роботом.
При моделировании робота в виртуальной среде для системы управления тренажера необходимо полностью сымитировать поведение виртуальной модели, аналогичное реальному роботу, что требует построения схемы автоматического  регулирования.
В схеме управляющий сигнал на исполнительное устройство формируется как взвешенная сумма пропорциональной, интегральной и дифференциальной составляющих с некоторыми коэффициентами.
Рассмотрим функциональную схему реализации копирующего режима для одного из двигателей.
Значения текущего угла поворота двигателя передаются в систему управления из подсистемы моделирования динамики.
Новое значение угла поворота, которого должен достичь двигатель, поступает от экзоскелета через отдельный подключаемый модуль.
Значение рассогласования вычисляется с помощью блоков умножения на константу  и сумматора.
Далее рассогласование подается на входы блоков дифференциатора и интегратора.
Значения с выходов этих блоков умножаются на коэффициенты дифференциального Кд и интегрального Ки регулирования соответственно и суммируются со значением пропорционального регулирования, получаемым умножением величины рассогласования на коэффициент пропорционального регулирования Кп.
Результирующее значение двиг интерпретируется как напряжение и передается в систему моделирования динамики на вход двигателя.
Представленная схема аналогична для всех двигателей антропоморфного робота; значения коэффициентов пропорционального Кп, дифференциального Кд и интегрального Ки регулирования либо задаются исходя из параметров реальных регуляторов, если они доступны, либо подбираются экспериментально.
Построенная функциональная схема была успешно апробирована для реализации копирующего режима управления антропоморфным роботом SAR-401 в Центре подготовки космонавтов им.
Ю.А.
Гагарина [7, 8].
В заключение отметим, что в статье рассмотрен разработанный в НИИИСИ РАН программный пакет для систем управления имитационнотренажерных комплексов.
Пакет включает в себя визуальный редактор, обладающий широкими функциональными возможностями по созданию и редактированию функциональных блок-схем, а также модуль расчета в режиме реального времени.
Модуль расчета реализован в виде динамической библиотеки, которая может быть подключена к любому программному комплексу.
Система была успешно апробирована для построения имитационно-тренажерного комплекса подготовки космонавтов [9].
Предложенная система может быть успешно использована для моделирования систем ручного и автоматического управления сложными динамическими системами, в том числе робототехническими, для построения систем управления тренажерных и обучающих систем, а также для моделирования АСУ технологическими процессами.
Преимуществами системы являются простота ее использования, нетребовательность к ресурсам и расширяемость.
