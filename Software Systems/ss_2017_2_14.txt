
Эффективное сжатие изображений без потери качества одна из важных задач теории информации, имеющая широкое практическое применение.
Ее решению посвящен ряд исследований .
Любое цифровое изображение можно представить последовательностью сообщений.
Для выбора таких сообщений существуют многочисленные способы.
Единственное требование к ним обеспечение возможности восстановления точной копии исходного изображения из последовательности сообщений.
Один из способов выбора сообщений заключается в том, что смежные элементы изображения группируются в блоки размером, где и число элементов в горизонтальном и вертикальном направлениях соответственно.
Затем полученные блоки кодируются в соответствии с вероятностями их появления, причем для наиболее вероятных конфигураций блоков используются короткие кодовые слова, а для менее вероятных длинные кодовые слова, в результате чего в среднем достигается сжатие данных.
Такой тип кодирования называется блочным и рассматривается в работах [4, 5].
Блочное кодирование с использованием адаптивных методов рассмотрено в работах [6, 7].
Любое двухуровневое  изображение мы будем рассматривать как совокупность примыкающих друг к другу прямоугольных блоков размером.
Эти блоки образуют совокупность сообщений, которая характеризует изображение.
Применив к совокупности блоков оптимальный код Хаффмана [8], можно добиться наибольшего сжатия данных.
Однако для блоков, размер которых более 33, совокупность сообщений оказывается очень большой, и использование кода Хаффмана становится нецелесообразным.
В данной работе предлагается эффективный двухэтапный метод блочного кодирования для двухуровневых изображений.
Найдены оптимальные размеры блока на первом этапе кодирования, а также проведено сравнение экспериментальных результатов сжатия построенного алгоритма с результатами сжатия блочного алгоритма JPEG [9], подтверждающее эффективность предложенного метода.
Исходя из этого наблюдения и предложенного в [10] субоптимального кода, построим эффективный метод блочного кодирования.
Кодирование будем осуществлять в два этапа.
Рассмотрим первый этап.
Кодовое слово для блока, состоящего из одних нулей, будет 0.
Кодовые слова для других конфигураций блоков образуются из двоичных разрядов, соответствующих данному блоку, которым предшествует префикс 1.
Рассмотрим второй этап кодирования, осуществляемый арифметическим кодом из [10].
Выделим в этой последовательности серии длины, которые следуют после появления 1, и особые символы 0 и 1, не входящие в блоки, то есть представим последовательность в виде 0 1 0 1.
Кодирование различных осуществляется арифметическим кодом из [10] с помощью различных кодеров, настроенных на различные вероятности появления нулей и единиц, и может быть описано следующим образом.
Особые символы 0 и 1 кодируются с помощью кодера с вероятностями и 1 для 0 и 1 соответственно.
Рассмотрим кодирование символов, находящихся внутри блока длины.
Тогда символ, находящийся вгде.
 Появление этих вероятностей объяснено в [11].
Наконец, символы в блоке, следующие после появления в этом блоке 1, кодируются с помощью кодера с исходными вероятностями и для 0 и 1 соответственно.
Важно отметить, что вероятности не хранятся в памяти кодера и декодера, а вычисляются по следующей рекуррентной формуле:.
Таким же образом кодируется следующий блок, причем перед каждым новым блоком начальные данные обновляются.
Для нахождения оптимальных размеров блока на первом этапе кодирования найдем теоретический коэффициент сжатия, полученный после первого этапа.
Под коэффициентом сжатия будем понимать отношение числа двоичных разрядов, необходимых для представления заданного изображения до кодирования, к числу двоичных разрядов после кодирования.
 Ограничимся рассмотрением квадратных блоков.
В таблице 1 приведены результаты зависимости коэффициента сжатия, полученные теоретически и экспериментально, от размера квадратного блока для различных двухуровневых изображений A1A5.
Отметим, что для теоретических и экспериментальных результатов размер был взят в интервале от 2 до 6.
В качестве тестовых изображений были взяты рассмотренные выше двухуровневые изображения A1A5.
Сравнение проводилось по степени сжатия.
Под степенью сжатия в данном случае понимаем количество бит, которым представляется в сжатом файле один байт  исходного  изображения.
Результаты степени сжатия для предложенного метода и для блочного метода JPEG представлены в таблице 2.
Из таблицы видно, что степень сжатия примерно на 2224 % лучше степени сжатия блочным методом JPEG, что подтверждает эффективность предложенного метода.
Показано, что оптимальные размеры блока для предложенного метода 44 или 55.
Построенный алгоритм кодирования может быть использован на практике для эффективного сжатия картографических и факсимильных изображений, спутниковых изображений земной поверхности и т.д.
1.
Бакулина М.П.
2017.
Т.
30.
2.
С.
282285; -235X.030.2.282-285.
2.
Bakulina M.P.An efficient block codig method for binary images.
2017, vol.
30, no.
2, pp.
