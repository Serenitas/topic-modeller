
Высокопроизводительные кластерные системы  используются в основном в научной среде для инженернонаучных расчетов.
Для этой среды характерно применение технологий на основе свободно распространяемого ПО с открытым исходным кодом.
Базовой ОС здесь является семейство ОС Linux.
Суперкомпьютеры, размещенные в  УрО РАН, работают под управлением двух близких разновидностей ОС Linux RedHat 6.3 и Scientific Linux 6.3.
Существует альтернативное ПО для организации вычислительных кластеров высокой производительности [1].
Использование этой ОС несколько снижает порог вхождения в суперкомпьютерные вычисления для пользователей невысокой квалификации.
Вычислительный кластер, работающий под управлением этой ОС, обладает следующими специфическими возможностями: пакетный запуск консольных  приложений для ОС Windows .
Это позволит некоторым пользователям выполнять в пакетном режиме задачи, предназначенные для работы под управлением ОС MS Windows.
Одним из таких экспериментов стало развертывание на нескольких выделенных узлах кластера ПО MS Windows Server 2008 R2 HPC Edition.
Основная задача развертывания состояла в отработке технологии двойной загрузки  физических узлов кластера и в обеспечении их миграции между логическими кластерами Linux/Windows.
В данном случае это отсутствие подключения головного узла Linux к Application Network.
Перед установкой ПО на физический кластер выполнено пробное развертывание макета кластера на наборе виртуальных машин аналогично тому, как это описано в [4, 5].
Ввиду того что дисковая подсистема должна обеспечивать возможность установки двух ОС , а минимальные требования для Windows HPC Server 50 Гб, под экспериментальный сегмент кластера с двойной загрузкой были использованы узлы с емкостью дисков 150 Гб.
Для минимального ухудшения работоспособности из основной части Linux-кластера узлы исключались по одному.
Сначала был установлен узел, предназначенный для развертывания ПО головного узла Windows-кластера.
В описываемом сценарии с небольшим количеством узлов, добавляемых в Windows-кластер по одному, можно было обойтись полностью ручной установкой всего нужного ПО.
Однако одной из задач была отработка технологии развертывания ПО на большой кластер, в связи с чем все работы для организации развертывания выполнены в автоматическом режиме.
С этой целью были подготовлены файлы описания узлов кластера, преобразованные при помощи PowerShell-скрипта из данных, сохраненных на этих узлах, под ОС Linux .
Так как на узлах должны быть установлены две различные ОС, был подготовлен файл описания C:\Program Files\Microsoft HPC Pack 2008\Data\InstallShare\Config\diskpart.txt для разбиения и распределения дисков, выполняющийся во время установки ОС Windows.
Подготовлены драйверы устройств  и дополнительное ПО .
После подготовки всех необходимых файлов с помощью стандартного мастера HPC Pack создан образ ОС со всеми дополнительными компонентами для автоматической установки по сети.
Для данной установки требуется работающий на головной машине Windows-кластера DHCPсервер.
Таким образом, в Private Network оказываются два DHCP-сервера, выполняющихся одновременно .
Заметим, что после установки ОС Windows на все узлы в случае, когда не планируется добавление новых узлов с автоматической установкой ОС по сети, сервер служб развертывания Windows и DHCP-сервер, обслуживающий Private network, могут быть остановлены.
Для Application Network на основе Infiniband в Windows-кластере DHCP-сервер сохраняется, так как в отличие от Linux-кластера поверх Infiniband используется и протокол TCP/IP.
После установки необходимого ПО на все узлы Windows-кластера была выполнена проверка его работоспособности.
В ходе опытной эксплуатации Windows-кластера были выявлены некоторые недостатки.
Проблема удаления с последующим возвращением узла в кластер.
То есть для узла нужно будет сгенерировать новое имя.
Проблема русификации.
По умолчанию интерфейс системы англоязычный.
Если установить пакет русскоязычного интерфейса на узлы кластера и включить русский как язык пользовательского интерфейса, Cluster Manager перестает отображать информацию о состоянии таких узлов.
Задания на узлах, несмотря на это, запускаются и выполняются.
Если на вычислительном узле вернуть английский как язык интерфейса, отображение состояния этого узла восстанавливается.
Механизм загрузки по сети при получении нескольких ответов от DHCP-серверов завершался с ошибкой безопасности.
Для оперативной автоматической установки Linux простейшее решение выключение головного узла Windowsкластера, на котором выполняется DHCP-сервер.
Для переключения вычислительного узла между логическими кластерами требуется загрузка соответствующей ОС.
Были рассмотрены следующие подходы к организации выбора ОС: чередование; при очередной перезагрузке узла будет загружена ОС, отличная от только что использованной; например, если узел кластера работал под управлением ОС Windows, то при очередной перезагрузке на нем запустится ОС Linux, и наоборот, в случае перезагрузки узла, работающего под управлением ОС Linux, на нем будет запущена ОС Windows; выбор загружаемой системы оператором на этапе загрузки и запуск последней использовавшейся ОС при долгом отсутствии нажатий на клавиши; создание общего загрузочного раздела и выбор запускаемой ОС путем записи в файл на этом диске; загрузка по сети с выбором загружаемой ОС DHCP-сервером.
Способ с чередованием требует постоянного наблюдения за тем, какая из ОС загружена на узле.
В случае обнаружения на узле ОС, не соответствующей ожидаемой, должна быть выполнена новая перезагрузка узла, для чего необходимо создать специальный сервис.
К тому же увеличение количества перезагрузок может негативно повлиять на срок службы узла.
Выбор загружаемой системы оператором неудобен и трудоемок для него, особенно, если смена ОС производится достаточно часто.
Создание общего загрузочного раздела требует, чтобы формат  на нем поддерживался обеими ОС.
К сожалению, данному критерию удовлетворяют только ФС семейства FAT, но их использование усложняет автоматическое развертывание ОС, так как использование FAT в качестве загрузочного диска требует установки нестандартного загрузчика, который не поддерживается популярными дистрибутивами Linux.
Использование других файловых систем требует установки экспериментальных драйверов, которые обычно находятся в состоянии, не пригодном для серьезного использования.
Поэтому был выбран подход, связанный с загрузкой по сети, как наиболее простой для администрирования и развертывания.
В ПЗУ сетевых карт современных компьютеров имеется PXE-код.
Получив управление при старте системы, этот код запрашивает настройки сети и адрес TFTP-сервера у DHCP-сервера по протоколу BOOTP, получает оттуда исполнимый файл и передает ему управление.
В качестве такого файла в рассматриваемом решении используется pxelinux одна из самых популярных реализаций загрузчика, которая позволяет передавать управление ядру Linux, загрузив его с того же TFTP-сервера.
При запуске pxelinux считывает свой файл конфигурации, в котором описан механизм загрузки конкретных ОС.
Для выбора ОС используется следующий конфигурационный файл DHCP-сервера: В данном примере um64_win/pxelinux.0 и um64_linux/pxelinux.0 это пути к исполняемым файлам, рассмотренным выше.
В каталоге um64_win в конфигурационном файле описана загрузка с ОС Windows, а в um64_linux с ОС Linux.
То есть в данном примере на узлах umu18 и umu19 будет загружаться ОС Windows, а umu20, umu21, umu22, umu23 Linux.
Таким образом, чтобы изменить ОС, загружаемую на узле, нужно переместить соответствующую узлу строку в другую группу и перезапустить DHCP-сервер или оповестить его об изменении конфигурационного файла.
При загрузке ОС Windows HPC Server управление передается загрузчику, находящемуся непосредственно на жестком диске узла кластера.
Для переключения узлов подготовлен набор скриптов, выполняющих определенные операции.
Скрипт 1 переносит узлы из группы Windows узлов в группу Linux .
Скрипт 2 выполняет обратную операцию переносит узлы из группы Linux в группу Windows .
Скрипт 3 маскирует узлы во всех группах  для того, чтобы на такие узлы можно было произвести по сети установку ОС MS Windows .
Скрипт 4 выполняет операцию, обратную действиям, выполняемым скриптом 3 .
Скрипт 5 выдает информацию о текущем распределении узлов по группам.
Скрипт 6 запускает перезагрузку на Linux-узлах кластера.
Данные скрипты выполняются на головном узле кластера под управлением ОС Linux .
Все они имеют один входной параметр список узлов, для которых должна быть выполнена запрошенная операция.
Для переключения узлов между системами с головной машины Windows-кластера  подготовлен скрипт PowerShell, имеющий два параметра.
Первый список узлов, над которыми должна быть выполнена операция, и второй имя операции.
В соответствии с указанной операцией PowerShell-скрипт по протоколу SSH вызывает соответствующий скрипт на головной машине Linux-кластера .
В случае перемещения узлов из Windows-кластера в Linux скрипт тоже выполняет соответствующие стандартные командлеты Windows HPC, переводящие указанные в списке узлы в состояние offline и запускающие перезагрузку этих узлов .
В заключение отметим, что осуществлена модернизация кластера, обеспечившая возможность одновременной работы двух ОС  на одном физическом кластере за счет выделения каждой ОС своего подмножества узлов.
