
Космические эксперименты, связанные с наблюдением планеты с околопланетной орбиты, являются источником ценных и уникальных научных данных о глобальных процессах и явлениях, протекающих на ее поверхности.
В настоящее время выполнение таких экспериментов по исследованию поверхности Земли одна из важных задач экипажей .
Мониторинг земной поверхности осуществляется через иллюминаторы как невооруженным глазом, так и с помощью фотои видеоаппаратуры с изменяемой кратностью увеличения и с постоянным полем зрения [1].
Ввиду высокой сложности выполнения таких экспериментов  для получения успешного результата космонавту необходимо активно тренировать соответствующие навыки.
Современным инструментом для проведения таких тренировок является визуализация в масштабе реального времени виртуальной трехмерной модели планеты с детализированными текстурами, созданными на основе спутниковых снимков.
Исследования в работе [1] показывают, что для имитации наблюдения Земли с борта МКС невооруженным глазом детализация таких текстур должна составлять не менее 150 м/пиксел и быть на порядок выше для имитации работы средств наблюдения с изменяемой кратностью увеличения.
Задача еще более усложняется в случае необходимости визуализации в космическом эксперименте дополнительных детализированных текстурных слоев (например, текстур с изображением облачного покрова или огней ночных городов).
Все это обусловливает высокую востребованность технологий и систем визуализации, которые могут работать с огромными массивами текстурных данных в режиме реального времени.
Возможность наблюдения текстурированных виртуальных поверхностей планет с орбитальной высоты предоставляют ряд популярных виртуальных 3D-глобусов, разрабатываемых как крупными организациями, так и сообществами энтузиастов.
Примерами таких программных продуктов являются виртуальный географический атлас NASA World Wind [2], астрономическая программа Celestia [3], симулятор орбитальных космических полетов Orbiter [4] и другие.
Однако возможности и скорость визуализации детализированных текстур планет в подобных системах зачастую ограничены и не отвечают в полной мере требованиям для постановки космических экспериментов [1].
К тому же особенности подобных зарубежных программных продуктов затрудняют их применение в отечественной космической отрасли.
Для решения рассматриваемой задачи в данной работе предлагается разработанная в НИИСИ РАН система визуализации текстурированных моделей планет в масштабе реального времени.
Принцип действия предлагаемой системы основан на разработанной технологии визуализации сверхбольших текстур.
При современных разрешениях средств отображения  объем пикселов, которые необходимо обрабатывать, крайне велик, поэтому ключевая идея предлагаемой технологии состоит в сокращении временных затрат путем распараллеливания такой обработки полностью на графическом процессоре .
По подобному направлению пошли авторы работы [6], однако предложенное ими решение на базе программно-аппаратной архитектуры CUDA позволяет обрабатывать в реальном времени лишь некоторую выборку из всех пикселов кадра и ограничивает область средств реализации только видеокартами компании NVidia.
В отличие от [6] в данной работе предлагается распараллеливать обработку всех пикселов кадра с помощью ряда разработанных шейдерных программ, написанных на универсальном языке GLSL, поддерживаемом всеми современными графическими ускорителями.
Предлагаемая технология включает в себя ряд этапов..
С этой целью при создании трехмерной модели поверхности планеты для каждой ее геометрической вершины указываются текстурные координаты этой вершины в исходной сверхбольшой текстуре.
Непосредственно сам синтез ST-текстуры реализуется путем рендеринга модели планеты в текстуру с помощью разработанной шейдерной программы.
Данная величина является вещественным числом и определяется на основе вычисления количества текселов, охватываемых сторонами проекции пиксела в пространстве текстуры.
Более подробно вычисление рассмотрено в [7].
На 1-м шаге создается полнокадровая текстура, в каждый тексел которой записывается идентификатор видимой страницы.
На 2-м шаге осуществляется удаление повторяющихся идентификаторов в текстуре.
Затем с помощью специально разработанного геометрического шейдера множество параллельно визуализируется в одноканальную текстуру размера с включенной побитовой операцией ИЛИ записи цвета.
В результате такой визуализации в текселах текстуры будут записаны битовые векторы, в которых единицы стоят в тех позициях, номера которых соответствуют номерам видимых страниц из массивов, ,.
На 3-м шаге формируется список неповторяющихся идентификаторов страниц.
С помощью специально разработанного геометрического шейдера создается множество трехмерных вершин, в которые записываются идентификаторы страниц, отмеченных в текстуре единичными битами.
Затем выполняется рендеринг вершин из в буфер вершин.
В результате в буфере вершин формируется список неповторяющихся идентификаторов отобранных страниц.
Так как графические процессоры могут работать только с информацией, находящейся в видеопамяти, а в видеопамять информацию можно копировать только из оперативной памяти, в работе предлагается использовать массивы, , страниц на жестком диске, массив в оперативной памяти и массив в видеопамяти.
Последние два массива используются для кэширования.
То есть при необходимости использования какой-либо страницы она сначала ищется в массиве.
Если ее там нет, то она подкачивается из массива, а если ее нет и в этом массиве, она подкачивается с жесткого диска.
При этом новая загружаемая страница записывается на место той, которая дольше всех не использовалась .
Подкачка страниц из, , в выполняется непрерывно в отдельном потоке.
Для подкачки страниц из в отводится некоторый промежуток времени, по истечении которого подкачка прекращается, а загрузка оставшихся страниц переносится в следующий кадр визуализации.
Закраска пикселов синтезируемой текстуры с изображением планеты выполняется с помощью текстурных групп и, а также ST-текстуры и LOD-текстуры.
Способ вычисления цвета закраски для каждого пиксела определяется индивидуально, исходя из его величины текстурной детализации, считанной из LOD-текстуры.
Если [0,1], цвет пиксела вычисляется также путем интерполяции с коэффициентом двух цветов, но вычисленных уже путем выборки из страницуровней.
Если необходимая пара страниц отсутствует в массиве, для визуализации используется уже подкаченная пара страниц ближайшего более грубого уровня детализации, а в случае отсутствия таковых данные из постоянно хранимой группы текстур.
Цвета всех закрашиваемых пикселов вычисляются параллельно на GPU с помощью разработанного фрагментного шейдера.
На рисунке 2 изображена результирующая схема работы предложенной технологии.
Описанная технология легко применяется для визуализации нескольких сверхбольших текстур на поверхности планеты.
Для каждой сверхбольшой текстуры создаются свои массивы, , страниц, буфер и текстурные группы и.
Этап вычисления ST-текстуры планеты выполняется один раз в кадре для всех визуализируемых текстур, а оставшиеся этапы технологии выполняются для каждой сверхбольшой текстуры отдельно.
Программный комплекс выполнен в виде dll-библиотеки, которая интегрируется во внешнее приложение (например, в систему визуализации трехмерных виртуальных сцен [8]).
Такой подход позволяет путем минимальных усилий построить любой программный комплекс, использующий высококачественную визуализацию сверхбольших текстур планет в режиме реального времени.
В качестве базовой технологии для вычисления описанных в работе текстур и вывода трехмерной графики система использует графическую библиотеку OpenGL и язык программирования шейдеров GLSL, соответствующие стандарту OpenGL 3.3.
Разработанный программный комплекс также снабжен модулем расчета орбитального положения наблюдателя, созданным на основе представленной ранее технологии моделирования полета космического аппарата по орбите [9, 10], и пользовательским интерфейсом, позволяющим задавать параметры эллиптической кеплеровской орбиты виртуального наблюдателя, начало и конец участка подспутниковой трассы и т.д.
На рисунке 3 изображено диалоговое окно для управления полетом виртуального наблюдателя вдоль участка подспутниковой трассы, соответствующего 1-, 2и 3-му орбитальным виткам МКС.
Разработанный программный комплекс прошел апробацию в составе системы визуализации трехмерных виртуальных сцен GLView [8].
Для апробации использовались трехмерная полигональная модель земной и лунной поверхности .
Скорость визуализации текстурированной земной поверхности составила около 150 кадров в секунду, а лунной около 200 кадров в секунду.
Апробация комплекса проводилась также в составе сложной виртуальной сцены с моделью МКС.
Скорость визуализации такой сцены составила около 76 кадров/с.
Синтез всех изображений выполнялся на видеокарте типа GeForce GTX 680 в разрешении Full HD.
На рисунке 4 изображены примеры кадров визуализации текстурированных моделей земной и лунной поверхности.
В заключение отметим, что в данной работе представлена технология визуализации сверхбольших текстур на виртуальных поверхностях планет в масштабе реального времени.
Технология обеспечивает текстурную детализацию для моделируемой поверхности планеты, наиболее близкую к разрешению экрана, а также позволяет визуализировать на виртуальной поверхности планеты в масштабе реального времени несколько сверхбольших текстур, имеющих различное исходное разрешение.
Предложенная технология реализована в программном комплексе визуализации детализированных текстур планет.
Апробация комплекса показала его адекватность поставленным задачам.
Он может быть использован как для улучшения характеристик существующих тренажеров по проведению космических экспериментов, так и для построения новых перспективных тренажеров, связанных, например, с исследованием Луны и Марса.
Разработка ведется строго в соответствии с требованиями российского законодательства, руководящих документов ФСТЭК России, ФСБ России, нормативных документов МО РФ и других ведомств.
Правомочность выполнения работ подтверждается действующими лицензиями ФСБ, ФСТЭК и Минобороны России.
Опыт работы НИИ Центрпрограммсистем в области информационной безопасности более 20 лет.
