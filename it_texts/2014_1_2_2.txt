Метод сетевого оператора для синтеза интеллектуальной системы управления динамическим объектом



1. Введение 

Летающие роботы сегодня в большинстве случаев представляют собой беспилотные вертолеты с четырьмя симметричными винтами (рис. 1). В западной литературе такая схема управления называется квадротором (quadrotor). Удобство управления квадротором заключается в том, что для поступательного движения не требуется шарниров, перемещающих вращающиеся конструкции. Движение вперед и назад, вправо и влево осуществляется за счет разности тяг двух противоположных винтов (рис. 2). В квадроторе нет необходимости в угле рыскания, так как движение по боковой оси абсолютно идентично движению по продольной оси по отношению к собственным осям симметрии. За счет вращения каждой пары винтов в противоположную сторону в квадроторе отсутствует реакция корпуса на общую тягу винтов, поэтому нет необходимости в компенсационном моменте, вырабатываемым в обычных вертолетах дополнительным хвостовым винтом. Квадротор может стоять неподвижно в пространстве, что также является дополнительным преимуществом, позволяющим использовать его в режиме робота. Сегодня квадроторы широко используются и продаются по всему миру. На настоящем этапе развития основным направлением является их интеллектуализация. Большинство работающих квадроторов и практически всех беспилотных летающих аппаратов управляются человеком от пульта управления. Автономные режимы работы для летающих роботов встречаются крайне редко. Данное обстоятельство вызвано, прежде всего, сложностью реализации систем управления, которая, помимо обеспечения режима движения летающего робота, должна также выполнять функцию выбора. Достаточно сложно реализовать полностью автономную систему управления летающим роботом, которая бы обеспечила весь процесс полета. Реально полет летающего робота должен включать несколько режимов управления, например, стабилизацию робота в пространстве, перемещение его в другую точку пространства, обнаружение и облет препятствий, обеспечение режима посадки. Перечисленные режимы движения могут быть легко реализованы достаточно несложными системами управления, но тогда при автономном режиме полета возникает дополнительная проблема выбора режима полета. Летающий робот должен автономно принять решение по выбору критерия, минимум которого ему необходимо обеспечивать. По критерию уже можно отобрать режим полета, хотя и при этом остается вопрос о том, что необходимо делать при ошибочном принятии решения. Выбор решения формально описывается с помощью логических выражений, следовательно, система управления должна включать не только набор блоков управления, реализующих определенные режимы управления, но и блоки логического вывода, которые также по состоянию объекта должны определить выбор режима управления. Из сказанного следует, что для управления летающими роботами актуальна задача синтеза логико-функционального управления. 

2. Задача синтеза интеллектуальной системы управления 

Рассмотрим формальную постановку задачи синтеза интеллектуальной системы управления. Логические переменные определяют выбор вариантов управления на основе предикатной функции, которую также необходимо найти: Для решения задачи используем метод сетевого оператора [1–8]. Метод позволяет искать решения на множестве математических выражений, задаваемых целочисленной матрицей сетевого оператора. Поскольку в задаче необходимо, помимо обычного функционального управления (5), искать также логическое управление (6), то используем два сетевых оператора. Для синтеза предикатной функции (6) используем логический сетевой оператор [6]. Логическую функцию ищем с помощью метода логического сетевого оператора. Функцию дискретизации определяем на основе анализа конкретной задачи. Для поиска решения используем генетический алгоритм, построенный на основе принципа базисного решения. Для определения сетевого оператора, к которому необходимо применить вариации, в генетическом алгоритме используем дополнительный бинарный вектор. 

3. Численный пример 

В качестве примера рассмотрим синтез интеллектуальной системы управления для беспилотного вертолета типа квадротор. Математическая модель квадротора имеет следующий вид: 

5. Результаты моделирования 

Результаты моделирования с одним из полученных логико-функциональных управлений приведены на рис. 4–11. На рисунках показаны квадратные точки пространственной траектории. На рис. 4 изображены учитываемые при синтезе области препятствий в форме прямоугольников. Для полученного управления мы имеем следующие значения критериев качества: 

Задача логического управления заключалась в обеспечении переключения точек пространственной траектории. Для построения логического выражения на вход логического блока подавались отклонения состояния объекта от текущей целевой точки заданной траектории и следующей точки. Начальные значения для моделирования были нулевые при высоте x3(0)=15 м.

Заключение 

По результатам моделирования видно достаточно точное движение квадротора по заданным точкам траектории. Прохождение всей траектории составило 24 с, при этом квадротор не задел область препятствий. 

