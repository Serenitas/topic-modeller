Сравнение встроенных методов решения систем линейных алгебраических уравнений в MathCAD

1. Введение 

Система MathCAD обладает довольно представительным набором средств для решения СЛАУ. При этом вопросы их конкретной применимости изучены явно недостаточно. В данном случае эти средства были использованы на примере полиномиальной интерполяции. Как известно, интерполяция как вид аппроксимации применяется для получения промежуточных значений функций, заданных чаще всего в табличной форме (при условии, что табличные значения не содержат погрешностей). Канонический полином довольно широко используется в целом ряде областей вычислительной математики (численное интегрирование и дифференцирование, решение нелинейных уравнений, строительная механика и т. д.). Из известных проблем полиномов высоких степеней можно упомянуть высокую вероятность осциллирования [1], а также осложнения при решении систем линейных алгебраических уравнений (СЛАУ) относительно искомых коэффициентов (как правило, плохая обусловленность матрицы и в ряде случаев близость ее к вырожденной) [2]. Поэтому для собственно интерполяции лучше использовать полиномы в другой форме (Лагранжа, Чебышева и т. д.). 

2. Постановка задачи 

Как правило, в задачах интерполяции истинная зависимость задана в табличной форме: Для существования и единственности решения (2) необходимо, чтобы узлы интерполяции были различными при MathCAD предоставляет несколько способов решения (2): 

 традиционный матричный; 

 обращением матрицы с помощью функции geninv; 

 методом Гаусса (функция rref); 

 функцией lsolve; 

 функцией polycoeff. 

Рассмотрение реализованных в них вычислительных алгоритмов является отдельной задачей, поэтому ограничимся в дальнейшем чисто практическим тестированием перечисленных способов. Стоит сразу отметить, что функция polycoeff является узкоспециализированной и предназначена только для решения (2). Остальные способы предназначены для решения произвольных СЛАУ.

Тестирование проводилось для двух диапазонов изменения аргумента: узлов. В качестве интерполируемой зависимости была выбрана затухающая синусоида. Степень полинома последовательно принимала значения 10, 50 и 100. Разумеется, трудно представить себе практическое применение полинома даже 50-й степени, однако тестирование серьезных систем компьютерной математики принято производить в «экстремальных» условиях. 

MathCAD — документ в среде MathCAD Prime 3.1 (рисунок), легко позволяет получить решение всеми упомянутыми способами. Для этого достаточно передвигать в документе соответствующие функции, так чтобы нужная из них оказалась непосредственно перед вычислением максимальной невязки 

1. Результаты (в числителе — максимальная невязка, в знаменателе — индекс соответствующего ей узла) 

Результаты, приведенные в табл. 1, 2, показывают, что матрица Вандермонда для обоих диапазонов изменения аргумента является плохо обусловленной, а при дополнительно к этому еще и близка к вырожденной (определитель стремится к нулю). Тем не менее при все использованные способы (кроме функции geninv) выдали неплохие и сопоставимые результаты (табл. 1). При начали проигрывать матричный способ и функция rref (реализующая метод Гаусса). Функция polycoeff при неожиданно показала себя хуже всех. Очевидным лидером во всех случаях показала себя функция lsolve. 

При (табл. 2) все способы, включая geninv, опять неплохо проявили себя при 

Дополнительно следует отметить, что не во всех случаях максимальные невязки отмечаются в крайних точках отрезка интерполяции. 

По утверждениям компании PTC программный код MathCAD Prime, включая вычислительные алгоритмы, написан с «нуля». Неоднозначность приведенных результатов побудила сравнить их с аналогичными результатами в среде предыдущих версий Mathsoft MathCAD. Результаты расчетов в среде Mathcad 14 приведены в табл. 3, 4. 

Практическое совпадение в обеих версиях MathCAD показали только geninv и rref, что, скорее всего, говорит об одинаковости реализованных алгоритмов. Несколько ухудшились результаты стандартного матричного метода и в ряде случаев функции lsolve. Функция polycoeff ведет себя или одинаково, или несколько хуже. В этой связи хотелось бы порекомендовать компании PTC обратить внимание на приведенный в [3] эффективный алгоритм обращения матрицы Вандермонда. 

Попутно следует отметить непонятные результаты вычисления в MathCAD 14 определителя Вандермонда при и (табл. 4). Вместо больших значений или сообщения о невозможности его вычисления получились строгие нули. Отмеченная особенность вряд ли имеет практическую ценность в связи с переходом (во многом, вынужденным) многих пользователей прежних версий Mathsoft MathCAD на MathCAD Prime. 

В целом следует констатировать избыточность способов решения СЛАУ, заложенных в среде MathCAD, независимо от версий. В данном примере лучше всего себя проявила функция lsolve. Данный вывод трудно считать однозначным, поскольку сделан он на основе интерполяции всего лишь одной зависимости. Вполне возможно, что в иных случаях лидерство может и поменяться. Очевидно, при решении любой произвольной СЛАУ стоит перебором упомянутых способов выбрать тот, который дает минимальные невязки.
