Программирование PIC-контроллеров на MicroPascal 



Микроконтроллеры семейства PIC являются одними из самых распространенных электронных устройств. Три уровня сложности таких чипов обеспечивают почти все потребности программного управления исполнительными механизмами [1]. Вместе с тем программирование таких микрочипов задача не простая. Сложность возникает на различных этапах процесса формирования «HЕХ-файла». Публикаций по заданной теме много. Есть также информация и в Интернете. Однако микроконтроллеры различных уровней сложности существенно отличаются друг от друга как конструктивно, так и технологией программирования [2]. В результате, если выполнять условия сборки электрической схемы питания вполне конкретного микрочипа, то сборка другого по этой же методике может привести к выходу его из строя. Принципиальная электрическая схема питания Pic-контроллеров при программировании нестандартная и это создает массу проблем при попытках их «прошивки». Вместе с существованием различных трудностей имеются и выгодные преимущества. «Прошивка» PIC-контроллеров почти всех уровней осуществляется с помощью программатора PIC-KITтм2, или PIC-KITтм3. Из изложенного следуют простые выводы. 

1. Нет универсальной методики при сборке принципиальной электрической схемы питания микроконтроллеров. 

2. Существует опасность вывода из строя микрочипа. 

Однако есть и другой путь, путь виртуального программирования. Виртуальное программирование не таит опасности поломки или короткого замыкания собранной схемы. Здесь все происходит на качественно ином уровне. Собранная электрическая схема либо работает, либо нет. В случае неудачи процесс можно изменить и повторить. При программировании микроконтроллеров применяются языки: С, Assembler [3]. В то же время можно с успехом использовать MicroPascal, который является основным языком для начинающих программистов. Разберем процесс программирования на конкретной виртуальной электрической схеме (рис. 1), основу которой составляет микроконтроллер PIC16F877A. Здесь на выводы порта В нагружены резисторы, светодиоды, а также вход датчика освещенности. Такая виртуальная электрическая схема позволяет выдавать сигналы на светодиоды по заданному алгоритму программы, при срабатывании датчика. 

Для запуска отлаженной программы требуется среда виртуального программирования Proteus, которая позволяет имитировать работу конкретного микрочипа, а также добавлять в схему различные датчики и исполнительные устройства из соответствующего набора компонент. 

В Proteus ISIS имеется режим Component, при его открытии появляется подсветка Pic from libraries и в списке PIC необходимо выбрать и добавить наш PIC16F877A, далее выбирается LED-RED, RES и все другие компоненты схемы, которые соответственно добавляются в форму. 

Включается кнопка «стрелка» и расставляются все элементы по принципиальной виртуальной электрической схеме. Для редактирования параметров необходимо щелкать левой кнопкой мыши на нужном элементе и в появляющемся окне выставлять технические параметры элемента. Все соединения в схеме выполняются с помощью курсора и левой кнопкой мыши. Код программы (HEX-файл) ищется в соответствующей строке свойств микроконтроллера и производится его запоминание. На рис. 2 приведена программа, обеспечивающая включение и отключение светодиодов, написанная на языке Pascal.

