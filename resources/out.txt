один   из   основной   научно-технический   направление   деятельность   нии  « центрпрограммсистема » ( г .  тверь )  являться   разработка   ас   в   защищать   исполнение .  при   это   под   защищать   исполнение   ас   пониматься   наличие   в   ее   состав   организационный   и   программно технический   средство   защита   информация   от   несанкционированный   доступ 
 разработка   автоматизированный   система   выполняться ,  как   правило ,  в   вид   опытно-конструкторский   работа  ( окр )  и   регламентироваться   в   основной   гост   34 й   серия   и   РВ   15.203 2001 .  этот   стандарт   определять   перечень   этап   окр ,  последовательность   и   порядок   их   выполнение ,  форма   отчетный   документ   и   т п .  необходимо   отмечать ,  что   приводить   гост   в   часть ,  касаться   разработка   по ,  являться   весьма   устаревать 
 действительно ,  за   десятилетие ,  прошедший   с   дата   ввод   они   в   действие ,  технология   разработка   по   уходить   далеко   вперед .  так ,  классический   каскадный   модель   разработка   по   в   последний   время   признавать   неэффективный   из-за   недостаточный   гибкость   в   угода   формальный   управление   разработка .  недостаточный   гибкость   процесс   разработка   обусловливать   неспособность   реагировать   на   изменение   требование   к   система   и   мочь   в   конечный   итог   приводить   к   невыполнение   технический   задание  ( тз .  в   связь   с   это   возникать   противоречие   между   технологический   уровень   разработка   современный   ас   и   устаревать   требование   руководящий   документ 
 разрешение   указанный   противоречие   возможно   путем   интеграция   современный   гибкий   метод   проектирование   на   этап   каскадный   модель   жизненный   цикл   разработка   по .  получать   такой   образ   комбинированный   модель   представлять   большой   интерес   и   с   научный   точка   зрение  –  для   совершенствование   методический   подход   к   разработка   по ,  и   с   практический  –  для   получение   качественный   по ,  соответствующий   заданный   требование 
 гибкий  ( agile )  метод   активно   применяться   в   область   разработка   по   в   последний   несколько   год .  они   позволять   устранять   ряд   недостаток   классический   каскадный   метод  ( метод   водопад ),  заключаться   в   недостаточный   гибкость   и   формальный   управление   проект   в   ущерб   срок ,  стоимость   и   качество .  недостаточный   гибкость   процесс   разработка   обусловливать   неспособность   реагировать   на   возникать   изменение   требование   к   система   и   мочь   в   конечный   итог   приводить   к   превышение   бюджет ,  срыв   срок   и   невостребованность   продукт .  причина   такой   изменение   мочь   быть   корректировка   требование   по   результат   демонстрация   по   заказчик ,  конечный   пользователь   или   эксперт   в   автоматизировать   предметный   область ,  ошибка ,  допускать   при   формулирование   требование   ранее ,  изменение   в   самый   предметный   область   и   т д .  ряд   зарубежный   автор   отмечать ,  что   изменение   функциональный   требование   к   по   в   общий   случай   практически   неизбежный   и   являться   часть   объективный   реальность ,  с   который   следовать   не   бороться ,  препятствовать   появление   изменение ,  а   наоборот ,  приветствовать   они   даже   на   завершающий   стадия   проект ,  потому   как   скорректировать   требование   являться   важный   условие   создание   действительно   востребовать   изделие ,  удовлетворять   актуальный   потребность   заказчик .  принятие   изменение   требование   даже   в   конец   разработка   являться   один   из   принцип   гибкий   методология ,  определенный   в   Agile   Manifesto 
 внедрение   гибкий   метод   разработка   по   обеспечивать   постепенный   итерационный   реализация   проект   с   постоянный   обратный   связь   от   конечный   пользователь .  проект   развиваться   небольшой   итерация ,  в   рамка   каждый   из   который   в   общий   случай   реализоваться   относительно   небольшой   приращение   функционал   система ,  представлять   ценность   для   пользователь .  каждый   итерация   заканчиваться   выпуск   новый   версия   по ,  который   демонстрироваться   пользователь  ( заказчик )  с   цель   получение   обратный   связь .  объем   программный   код ,  разрабатывать   в   рамка   очередной   итерация ,  оказываться   относительно   небольшой ,  что   обеспечивать   возможность   его   корректировка   в   рамка   текущий   проект   в   случай   вероятный   изменение   функциональный   требование .  в   результат   необходимый   изменение   вноситься   в   программный   код   своевременно 
 однако   при   управление   объемный   проект   формализация   иметь   большой   ценность ,  так   как   обеспечивать   прозрачность   процесс   разработка .  известный   американский   стандарт   по   управление   требование   Project   Management   Body   of   Knowledge  ( PMBOK )  в   свой   третий   версия   формально   закреплять   только   методика   каскадный   модель ,  а   в   2009   г .  институт   управление   проект  ( Project   Management   Institute ,  PMI )  предлагать   гибридный   методология ,  позволять   сочетать   достоинство   классический   метод   водопад   и   современный   гибкий   метод   разработка 
 учитывать   положительный   мировой   опыт   использование   гибкий   метод ,  задача   их   внедрение   в   область   разработка   система   специальный   назначение   представляться   актуальный 
 внедрение   гибкий   метод   в   разработка   по   являться   комплексный   и   достаточно   трудоемкий   задача .  она   связывать   с   изменение   основной   технологический   и   организационный   процесс   разработка   по ,  способ   взаимодействие   с   заказчик ,  планирование   и   контроль   разработка   и   т д .  итерационный   разработка   задавать   новый   ритм   работа   не   только   коллектив   разработчик ,  но   и   другой   отдел   организация   и   даже   ее   руководство .  нередко   для   внедрение   гибкий   метод   разработка   в   организация   приглашаться   сертифицировать   и   дорогостоящий   специалист 
 в   нии  « центрпрограммсистема »  при   выполнение   ряд   окр   быть   предпринимать   попытка   использовать   гибкий   метод   в   рамка   действующий   нормативный   документ   и   государственный   стандарт   разработка   система   специальный   назначение 
 из   известный   гибкий   метод   быть   выбирать   Scrum .  следование   его   основной   принцип   позволять   предоставлять   конечный   пользователь  ( заказчик )  работать   по   с   новый   возможность   в   фиксировать   и   относительно   короткий   итерация ,  называть   спринт  ( sprints .  при   это   сбор   требование ,  проектирование ,  разработка   по   и   его   демонстрация   заказчик   мочь   выполняться   в   каждый   спринт .  однако   в   соответствие   с   гост   РВ   15.203 2001   этап   окр   в   общий   случай   выполняться   последовательно :  этап   разработка   рабочий   конструкторский   документация   предшествовать   этап   эскизный   и   технический   проектирование ,  корректировка   опытный   образец   выполняться   после   испытание   и   т д .  этап   выполнение   окр   зачастую   длиться   месяц   и   даже   год .  кроме   то ,  эффективный   итерационный   разработка   по   требовать   постоянный   вовлечение   эксперт   в   автоматизировать   предметный   область   в   процесс   разработка ,  а   не   только   в   момент   сдача   этап ,  защита   эскизный   и   технический   проект   и   т д .  в   связь   с   это   целесообразно   сформировывать   группа   эксперт   в   предметный   область   для   обеспечение   сбор   требование ,  получение   обратный   связь   и   выполнение   ряд   другой   работа   в   рамка   окр .  например ,  при   разработка   автоматизированный   система   и   программный   комплекс   военный   назначение   в   группа   эксперт   мочь   входить   должностной   лицо   орган   военный   управление   и   специалист   организация ,  выполнять   военный научный   сопровождение 
 важный   аспект   внедрение   гибкий   метод   являться   сбор   и   управление   требование .  гибкий   методология   разработка   ориентироваться   на   динамический   формирование   требование .  это   давать   заказчик   право   и   возможность   по   результат   очередной   итерация   формулировать   новый   требование .  однако   такой   порядок   формирование   требование   мочь   приводить   к   то ,  что   вновь   сформировывать   требование   быть   противоречить   уже   реализованный   и   в   некоторый   случай   требовать   решение ,  нарушать   архитектура   разрабатывать   ранее   по .  кроме   то ,  динамический   формирование   требование   усложнять   процесс   управление   они ,  снижать   предсказуемость   процесс   разработка   и   затруднять   планирование   работа .  динамический   формирование   требование   мочь   означать   изменение   объем   работа ,  срок   проект   или   его   стоимость .  однако   окр ,  как   правило ,  выполняться   по   заранее   согласованный   и   утверждать   тз ,  а   срок   и   стоимость   работа   зачастую   жестко   определяться   контрактный   документ .  при   это   четко   задавать   в   тз   перечень   задача ,  решение   который   должно   обеспечивать   разрабатывать   по ,  ограничивать   возможность   изменение   объем   работа 
 способ   управление   объем   работа   по   реализация   функциональный   требование ,  предъявлять   к   по   специальный   назначение ,  являться   разработка   постановка   задача .  постановка   задача   позволять   конкретизировать   и   детализировать   требование ,  описывать   порядок   их   реализация  ( порядок   решение   задача ),  использовать   алгоритм ,  формат   данные ,  определять   форма   входной   и   выходной   документ   и   пр .  уточнение   и   конкретизация   функциональный   требование   в   постановка   задача   фактически   позволять   варьировать   трудоемкость   выполнение   задача   тз ,  а   утверждение   их   заказчик   обеспечивать   они   юридический   сила 
 один   из   современный   подход   к   формирование   функциональный   требование   являться   разработка   вариант   использование  ( прецедент .  вариант   использование   утверждать   поведение   система   при   обработка   запрос   пользователь  ( основный   действующий   лицо )  и   в   общий   случай   являться   простой   текстовый   описание   последовательность   взаимодействие   пользователь   с   система .  при   необходимость   в   описание   функциональный   требование   можно   добавлять   диаграмма   на   формальный   язык   тип   UML ,  BPMN ,  IDEF   и   другой ,  пояснять   схема ,  рисунок   и   прочий   материал .  однако ,  как   показывать   практика   и   отмечать   некоторый   автор   издание   на   тема   гибкий   методология   и   современный   метод   формирование   требование ,  большой   ценность   представлять   именно   текстовый   описание   прецедент .  разрабатывать   вариант   использование   целесообразно   включать   в   соответствующий   постановка   задача   в   раздел  « порядок   решение   задача .  при   необходимость   следовать   изменять   способ   нумерация   расширение   описание   прецедент .  классический   способ   нумерация   расширение   являться   добавление   к   порядковый   номер   расширять   шаг   основной   сценарий   прецедент   литер  « а », « б », « в » ( a ,  b ,  c )  и   т д .  например ,  основной   сценарий   прецедент   содержать   действие  « 3 .  система   выводить   документ   на   печать .  поведение   система   в   случай   сбой   печать   описываться   в   расширение   прецедент ,  например : « 3а .  в   принтер   нет   бумага  –  система   предлагать   добавлять   бумага   в   лоток   и   повторять   попытка   печать .  такой   способ   нумерация   расширение   прецедент ,  приводить   в   постановка   задача ,  зачастую   являться   непривычный   для   эксперт   в   предметный   область   и   мочь   быть   заменять   на   более   естественный   формулировка   в   повествовательный   стиль 
 трудоемкость   разработка ,  последующий   согласование   и   утверждение   постановка   задача   кардинальный   сокращаться   в   случай   применение   гибкий   метод   разработка   по 
 при  « классический »  выполнение   окр   постановка   задача   разрабатываться   и   утверждаться   до   начало   непосредственный   разработка   по .  это   зачастую   затягивать   разработка   постановка   и   приводить   к   их  « раздувание »,  спровоцировать   перепроектирование ,  обусловливать   стремление   эксперт   в   предметный   область   включать   в   постановка   задача   много   требование  « на   всякий   случай .  однако   по   ход   развитие   проект   больший   часть   подобный   требование   мочь   потерять   свой   актуальность ,  потребовать   существенный   корректировка ,  выходить   за   граница   система   или   вовсе   оказываться   надуманный 
 в   случай   итерационный   подход   актуальность   сформулировать   функциональный   требование   и   корректность   их   реализация   мочь   быть   определять   в   конец   каждый   итерация   по   результат   демонстрация   разрабатывать   по   группа   эксперт   в   предметный   область .  при   это   трудоемкость   разработка   постановка   задача ,  их   согласование   и   утверждение   заказчик   сокращаться .  это   происходить   прежде   все   потому ,  что   постановка   задача   содержать   уже   реализовывать   функциональный   требование .  к   момент   согласование   постановка   эксперт   в   предметный   область   и   конечный   пользователь   уже   иметь   возможность   апробировать   на   практика   реализация   сформулировать   в   они   требование .  в   случай   изменение   требование   постановка   задача   мочь   быть   скорректировать   и   утверждать   повторно   даже   на   этап   разработка   рабочий   конструкторский   документация   и   более   поздний 
 наличие   формально   заданный   в   тз   функциональный   требование   к   по ,  с   один   сторона ,  и   требование ,  определенный   в   вид   описание   прецедент ,  с   другой ,  обусловливать   актуальность   задача   обеспечение   их   трассировка   и   непротиворечивость .  разрабатывать   описание   прецедент   не   должный   противоречить   формальный   требование   тз .  напротив ,  они   должный   они   уточнять ,  детализировать   и   конкретизировать .  кроме   то ,  неэффективный   трассировка   требование   в   сочетание   с   недостаточный   планирование   близко   к   завершение   этап   разработка   рабочий   конструкторский   документация   мочь   приводить   к   авральный   реализация   формальный   задача   с   низкий   приоритет ,  откладывать  « на   потом 
 учитывать   это ,  представляться   целесообразный   реализация   дополнительный   инструмент ,  позволять   отслеживать   соответствие   реализовать   функциональный   требование  ( прецедент )  формальный   задача ,  сформулировать   в   тз .  это   обеспечивать   трассировка   требование   и   их   непротиворечивость 
 как   показывать   практика ,  такой   инструмент   мочь   быть   простой   таблица ,  содержать   два   столбец :  в   один   указываться   задача   тз ,  в   другой  –  соответствовать   он   прецедент .  она   мочь   быть   дополнять   столбец   с   указание   название   соответствующий   постановка   или   постановка   задача 
 такой   таблица   обеспечивать   трассировка   требование   от   формальный   задача ,  определенный   в   тз через   соответствующий   постановка   к   конкретный   описание   прецедент .  трассировка   позволять  « не   забывать »  про   формальный   требование   тз ,  увлекаться   динамический   формирование   бэклога   проект   по   результат   работа   с   эксперт   в   предметный   область 
 указание   постановка   задача   в   таблица   трассировка   мочь   быть   особенно   актуально   в   случай ,  когда   на   один   задача   из   тз   разрабатываться   два   и   более   постановка .  оформление   такой   таблица ,  за   исключение   столбец   с   перечень   прецедент   в   вид   формальный   документ ,  согласование   и   утверждение   он   у   заказчик   существенно   упрощать   задача   проверка   реализация   требование   к   математический   обеспечение   на   этап   испытание   опытный   образец   конечный   изделие .  значительно   упрощать   процесс   разработка   функциональный   требование ,  повышать   их   организация   и   обеспечивать   соответствие   формальный   задача   тз   позволять   формирование   карта   воздействие  ( Impact   Mapping )  и   карта   история  ( story   mapping 
 Impact   Mapping   рассматривать   функциональный   требование   в   контекст   бизнес цель   и   делать   акцент   на   тот   изменение   деятельность   конечный   пользователь ,  который   должный   обеспечивать   система   для   их   достижение .  фрагмент   упрощенный   карта   воздействие   приводить   на   рисунок .  как   видно   из   рисунок ,  основной   цель   автоматизация   являться   обеспечение   оперативность   формирование   и   представление   сведение   по   движение   пациент   в   медицинский   организация .  этот   цель   мочь   быть   достигать   изменение   деятельность   два   специалист :  специалист   медицинский   управление   и   специалист   медицинский   организация .  изменение   деятельность   первый   заключаться   в   повышение   оперативность   сбор   данный   и   расчет   по   движение   пациент   в   подчиненный   медицинский   организация ,  а   также   в   обеспечение   автоматизированный   контроль   получать   данные 
 повышение   оперативность   сбор   данный   и   расчет   мочь   быть   обеспечивать   за   счет   автоматизированный   сбор   данные   от   подчиненный   медицинский   организация   и   автоматизация   расчет   динамика   движение   пациент .  аналогичный   образ   можно   интерпретировать   весь   карта   воздействие .  выстраивание   логический   цепочка   от   цель   через   пользователь   система   до   конкретный   функциональный   требование ,  описывать   в   вид   пользовательский   история ,  прецедент   или   вариант   использование ,  обеспечивать   визуализация   решение   актуальный   задача   их   трассировка .  другой   хорошо   зарекомендовать   себя   на   практика   подход   к   формирование   функцио   нальный   требование   являться   составление   карта   история  ( story   map .  такой   подход   позволять   в   простой   табличный   форма   представлять   сценарий   применение   система   и   отображать   в   он   место   функциональный   требование   в   вид   вариант   использование   или   прецедент 
 строка   таблица  « сценарий   применение   система »  описывать   последовательность   действие   пользователь  –  специалист   медицинский   организация   и   управление   с   использование   разрабатывать   система .  последовательность   состоять   из   отдельный   шаг ,  располагать   слева   направо   и   конкретизировать   в   описание   соответствующий   прецедент .  в   строка   таблица  « скелет   система »  отображаться   функциональный   требование ,  реализация   который   позволять   сформировывать   скелет   действующий   система .  скелетный   реализация   не   позволять   выполнять   весь   запланировать   функциональный   требование   и   формальный   задача   тз   в   полный   объем ,  но   она   обеспечивать   выполнение   прогон   система   по   сценарий   применение   от   начало   до   конец ,  хотя   и   с   ограничение .  указание   формальный   задача  ( или   цель )  вверху   таблица   давать   возможность   упрощать   и   визуализировать   трассировка   требование 
 следующий   важный   аспект   разработка   по   специальный   назначение   являться   планирование   и   отслеживание   выполнение   работа .  один   из   недостаток   гибкий   метод   являться   недостаточный   формализация   планирование ,  снижать   предсказуемость   выполнение   проект ,  в   тот   время   как   действующий   стандарт   выполнение   окр ,  напротив ,  предписывать   разрабатывать   планировать   документ ,  например ,  единый   сквозной   план   создание   изделие ,  сетевой   план график   и   т д .  помимо   формальный   требование   стандарт ,  эксперт   в   предметный   область   и   их   руководство   зачастую   требовать   разработка   и   согласование   планировать   документ   с   цель   организация   свой   деятельность 
 упрощать   задача   планирование   гибкий   разработка   позволять   небольшой   фиксировать   длительность   итерация .  следовать   принцип   метод   Scrum ,  к   реализация   в   каждый   новый   спринт   выбираться   функциональный   возможность ,  для   который   определять   большой   приоритет .  требование   для   реализация   в   очередной   спринт   выбираться   в   его   начало   и   в   общий   случай   не   меняться   до   его   завершение .  при   это   фиксировать   длительность   спринт   обеспечивать   он   некоторый   предсказуемость   и   упрощать   процесс   планирование 
 при   планирование   работа   следовать   учитывать ,  что   сбор   требование   и   проектирование   их   реализация   в   общий   случай   должный   опережать   разработка   соответствовать   по .  это   позволять   избегать   простой   в   работа   программист .  целесообразный   длительность   такой   опережение   составлять   один два   итерация 
 с   цель   поддержка   планирование   разработка   по   специальный   назначение ,  помимо   формальный   планировать   документ ,  предусмотренный   действующий   государственный   стандарт ,  мочь   быть   применять   адаптированный   вариант   бэклога   проект ,  предусматривать   метод   Scrum 
 в   первый   столбец   таблица   указываться   функциональный   требование .  их   приоритет   оцениваться   в   балл   от   один   до   три   и   указываться   во   второй   столбец .  сложность   реализация   каждый   функциональный   требование   оцениваться   аналогично   и   указываться   в   третий   столбец   таблица .  далее   приводиться   ссылка   на   прототип   графический   интерфейс ,  разрабатывать   дизайнер  ( проектировщик .  знак   в   пятый   столбец   означать   наличие   приемочный   тест ,  подготовить   группа   тестировщик .  столбец  « результат   тестирование »  позволять   уяснять   наличие   и   общий   характер   выявлять   дефект  ( ошибка .  например ,  условный   обозначение ,  закрашивать   красный   цвет ,  означать ,  что   ошибка   быть   выявлять   при   проведение   приемочный   тест   вручную ,  а  –  при   выполнение   автоматический   приемочный   тестирование .  кроме   то ,  в   этот   столбец   можно   указывать   и   другой   условный   обозначение   результат   тестирование ,  по   тот   или   иной   причина   представлять   интерес   для   руководитель   проект 
 функциональный   требование ,  запланировать   к   реализация   в   один   и   тот   же   итерация ,  отображаться   в   соседний   строка   таблица .  группа   требование   один   итерация   отчеркиваться   двойной   линия   от   остальной   часть   бэклога .  сверху   указываться   номер   итерация ,  дата   она   начало   и   окончание   и   версия   выпуск  ( релиз )  по ,  который   быть   продемонстрировать   заказчик   по   завершение   итерация .  итерация   располагаться   в   бэклога   проект   в   хронологический   порядок   сверху   вниз 
 приводить   реализация   бэклога   проект   не   просто   содержать   перечень   функциональный   требование ,  но   и   позволять   планировать   их   выполнение   и   отслеживать   результат .  бэклога   проект   обобщенно   отображать   результат   работа   системный   аналитик ,  программист   и   тестировщик .  непротиворечивость   использовать   бэклога   проект   формальный   планировать   документ   обеспечиваться   за   счет   учет   и   отображение   в   немой   формальный   срок   этап   и   работа   выполнять   окр 
 еще   один   решение ,  позволять   упрощать   планирование   гибкий   разработка ,  являться   приоритизация   требование 
 некоторый   зарубежный   специалист   в   область   гибкий   метод   советовать   оценивать   приоритет   функциональный   требование   в   балл ,  например ,  от   один   до   три   по   мера   возрастание   приоритет .  единый   подход   к   определение   приоритет   функциональный   требование   нет ,  приоритет   оцениваться   умозрительный ,  исходить   из   личный   представление   и   опыт   тот   или   иной   привлекать   эксперт .  применение   упоминать   ранее   Impact   Mapping   и   карта   история   позволять   облегчать   процесс   приоритизация   требование   за   счет   визуализация   их   влияние   на   достижение   поставлять   бизнес цель   и   сценарий   применение   система   соответственно .  кроме   то ,  при   необходимость   бизнес цель ,  достижение   который   обеспечиваться   реализация   соответствующий   функциональный   требование ,  мочь   быть   отображать   в   вид   веха   или   приводить   как   дополнительный   описание   итерация   в   бэклога   проект .  аналогичный   образ   в   бэклога   мочь   быть   отображать   формальный   задача ,  определять   в   тз   на   окр 
 метод   гибкий   разработка   Scrum   предлагать   отслеживать   процесс   выполнение   работа   при   помощь   диаграмма   сгорание   задача  ( Burndown   chart .  такой   диаграмма   графически   отображать   уже   вложенный   трудозатраты   и   трудоемкость   оставаться   работа   и   мочь   быть   составлять   на   один   или   несколько   итерация .  по   мера   выполнение   работа   кривая   оставаться   трудозатраты ,  отображать   на   график ,  быть   стремиться   к   ноль .  однако ,  учитывать ,  что   перечень   функциональный   требование   формироваться   динамически ,  уже   реализовывать   требование   мочь   корректироваться   заказчик   по   итог   демонстрация   очередной   версия   по ,  скорость   работа   команда   разработчик   меняться   от   итерация   к   итерация ,  диаграмма   сгорание   задача   на   практика   позволять   сделать   лишь   очень   приблизительный   прогноз   срок   завершение   работа .  скоро ,  она   мочь   быть   использовать   для   отслеживание   расчетный   запаздывание   реализация   проект .  более   точный   оценка   процесс   разработка   по   мочь   быть   получать   при   совокупный   использование   бэклога ,  карта   история   и   способ   Impact   Mapping .  при   это   целесообразно   сосредотачиваться   на   достижение   заранее   спланировать   контрольный   точка ,  приводить   в   планировать   документ 
 внедрение   гибкий   метод   в   процесс   разработка   по   специальный   назначение ,  безусловно ,  являться   трудоемкий   и   обладать   множество   особенность ,  не   рассматривать   в   данный   статья .  однако   ряд   положительный   результат ,  получать   нии  « центрпрограммсистема »  при   сочетание   гибкий   метод   разработка   по   с   классический   каскадный   модель   выполнение   окр   в   специальный   область ,  позволять   сделать   вывод   о   возможность   и   актуальность   применение   принцип   гибкий   методология   в   рамка   действующий   нормативный   документ   и   государственный   стандарт .  способ   применение   гибкий   метод ,  рассматривать   в   данный   статья ,  представлять   себя   решение ,  позволять   организовывать   процесс   разработка   по ,  сочетать   преимущество   современный   гибкий   метод   и   классический   каскадный   модель   жизненный   цикл   по .  гибридный   процесс   разработка   способствовать   разрешение   противоречие   между   технологический   уровень   разработка   современный   ас   и   устаревать   требование   руководящий   документ 
 