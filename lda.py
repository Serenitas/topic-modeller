import pymystem3   # learn more: https://python.org/pypi/pymystem3
import gensim
import re
import artm

corpus = gensim.corpora.UciCorpus("docword.mmro.txt", "vocab.mmro.txt")
dictionary = corpus.create_dictionary()
ldamodel = gensim.models.ldamodel.LdaModel(corpus, id2word=dictionary, num_topics=20, passes=20)
ldamodel.save("ldamodel_test")

print (2**-(ldamodel.log_perplexity(list(corpus))))

# sampledocs = {"Название элемента происходит от лат. calx (в родительном падеже calcis) — «известь», «мягкий камень»." +
#               "Оно было предложено английским химиком Хэмфри Дэви, в 1808 г. выделившим металлический кальций " +
#               "электролитическим методом. Дэви подверг электролизу смесь влажной гашёной извести с оксидом ртути HgO " +
#               "на платиновой пластине, которая являлась анодом. Катодом служила платиновая проволока, погруженная в " +
#               "жидкую ртуть. В результате электролиза получалась амальгама кальция. Отогнав из неё ртуть, " +
#               "Дэви получил металл, названный кальцием.!",
#               "Входит в группу инертных газов в периодической таблице. В 1898 году английский учёный У. Рамзай " +
#               "выделил из жидкого воздуха (предварительно удалив кислород, азот и аргон) смесь, в которой " +
#               "спектральным методом были открыты два газа: криптон («скрытый», «секретный») и ксенон («чуждый», " +
#               "«необычный»).",
#               "К предмету фонетики относится тесная связь между устной, внутренней и письменной речью. В отличие от " +
#               "других языковедческих дисциплин, фонетика исследует не только языковую функцию, но и материальную " +
#               "сторону своего объекта: работу произносительного аппарата, а также акустическую характеристику " +
#               "звуковых явлений и восприятие их носителями языка. В отличие от нелингвистических дисциплин фонетика " +
#               "рассматривает звуковые явления как элементы языковой системы, служащие для воплощения слов и " +
#               "предложений в материальную звуковую форму, без чего устное общение невозможно. В соответствии с тем, " +
#               "что звуковую сторону языка можно рассматривать в акустико-артикуляторном и функционально-языковом " +
#               "аспектах, в фонетике различают собственно фонетику и фонологию.",
#               "Наряду с обозначением некоторой области лингвистики, термин «морфология» может обозначать и часть " +
#               "системы языка (или «уровень» языка) — а именно, ту, в которой содержатся правила построения и " +
#               "понимания слов данного языка. Так, выражение испанская морфология соотносится с частью испанской " +
#               "грамматики, в которой изложены соответствующие правила испанского языка. Морфология как раздел " +
#               "лингвистики является в этом смысле обобщением всех частных морфологий конкретных языков, " +
#               "то есть совокупностью сведений о всех возможных типах морфологических правил.",
#               "Поддерживает такие парадигмы программирования, как процедурное программирование, " +
#               "объектно-ориентированное программирование, обобщённое программирование. Язык имеет богатую стандартную " +
#               "библиотеку, которая включает в себя распространённые контейнеры и алгоритмы, ввод-вывод, регулярные " +
#               "выражения, поддержку многопоточности и другие возможности. C++ сочетает свойства как высокоуровневых, " +
#               "так и низкоуровневых языков.[1][2] В сравнении с его предшественником — языком C, — наибольшее " +
#               "внимание уделено поддержке объектно-ориентированного и обобщённого программирования.[2]",
#               "Java[прим. 1] — сильно типизированный объектно-ориентированный язык программирования, разработанный " +
#               "компанией Sun Microsystems (в последующем приобретённой компанией Oracle). Приложения Java обычно " +
#               "транслируются в специальный байт-код, поэтому они могут работать на любой компьютерной архитектуре, " +
#               "с помощью виртуальной Java-машины."}
#
# lemmatizer = pymystem3.Mystem()
#
# lem_txts = []
#
# for doc in sampledocs:
#     lemmas = lemmatizer.lemmatize(doc)
#     lemmas2 = []
#     for l in lemmas:
#         if re.search('[А-яA-z]', l) and not re.search('[^A-zА-я]', l) and len(l) > 2:
#             print(l)
#             lemmas2.append(l)
#     lem_txts.append(lemmas2)
#
# dictionary = gensim.corpora.Dictionary(lem_txts)
# corpus = [dictionary.doc2bow(text) for text in lem_txts]
#
# ldamodel = gensim.models.ldamodel.LdaModel(corpus, num_topics=3, id2word = dictionary, passes=20)
#
# for t, top in ldamodel.print_topics(num_topics=3, num_words=10):
#     print ("Topic: ", t, " ", top)
#
# print("WTF?", ldamodel.get_document_topics(corpus[0]))



